<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/4.1.1" created="2015-02-20 21:57" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>J. Muller</title>
	<link>http://jomuller.fr</link>
	<description>Découvertes en science des données</description>
	<pubDate>Fri, 20 Feb 2015 21:57:32 +0000</pubDate>
	<language>fr-FR</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>http://jomuller.fr</wp:base_site_url>
	<wp:base_blog_url>http://jomuller.fr</wp:base_blog_url>

	<wp:author><wp:author_id>2</wp:author_id><wp:author_login>jomuller</wp:author_login><wp:author_email>joris.muller@free.fr</wp:author_email><wp:author_display_name><![CDATA[jomuller]]></wp:author_display_name><wp:author_first_name><![CDATA[Joris]]></wp:author_first_name><wp:author_last_name><![CDATA[Muller]]></wp:author_last_name></wp:author>


	<generator>http://wordpress.org/?v=4.1.1</generator>

	<item>
		<title>R : library() vs require()</title>
		<link>http://jomuller.fr/?p=11</link>
		<pubDate>Thu, 27 Feb 2014 18:29:20 +0000</pubDate>
		<dc:creator><![CDATA[jomuller]]></dc:creator>
		<guid isPermaLink="false">http://chmilblick.fr/?p=11</guid>
		<description></description>
		<content:encoded><![CDATA[<p>L’une des grandes forces du <a href="http://cran.r-project.org/">langage R</a> est d’être facilement extensible à l’aide d’un système de packages faciles à gérer tant pour l’utilisateur que pour le développeur. Pour charger en mémoire un package, il est habituel d’utiliser la fonction <code>library()</code>. Par exemple pour pouvoir utiliser le package <em>dfexplore</em> il suffit de taper :</p>

<pre>package(dfexplore)</pre>

<p>Cependant, une autre fonction, <code>require()</code>, semble remplir la même mission.</p>

<pre>require(dfexplore)</pre>

<!--more-->

<h2>Objectif</h2>

<p>Quelle est la différence entre les fonctions <code>library()</code> et <code>require()</code>?</p>

<h2>Réponse courte</h2>

<p>D’après <a href="http://abcdr.guyader.pro/2922-quelle-est-la-difference-entre-library-et-require/">abcdr.guyader.pro</a></p>

<blockquote>
  <p>il n’y en a pas… ou si peu […] <strong>require</strong> est a utiliser dans le corps d‘une <strong>fonction</strong>, qui affichera un <strong>message d’erreur</strong> si le package n’existe pas mais continuera son execution</p>
</blockquote>

<p>Point de vue qui est partagé sur <a href="http://stackoverflow.com/questions/5595512/what-is-the-difference-between-require-and-library">StackOverflow</a>.</p>

<h2>Documentation</h2>

<p>Ces deux fonctions partagent la <a href="http://stat.ethz.ch/R-manual/R-devel/library/base/html/library.html">même page de documentation</a>. En la lisant, on remarque que les deux fonctions ne partagent pas les mêmes arguments.</p>

<table border="0" cellspacing="0">
  <colgroup span="3" width="121"></colgroup> <tbody>
    <tr>
      <td align="left" height="23">
        Argument
      </td>
      
      <td align="left">
        library()
      </td>
      
      <td align="left">
        require()
      </td>
    </tr>
    
    <tr>
      <td align="left" height="24">
        package
      </td>
      
      <td align="left">
        X
      </td>
      
      <td align="left">
        X
      </td>
    </tr>
    
    <tr>
      <td align="left" height="24">
        <strong>help</strong>
      </td>
      
      <td align="left">
        X
      </td>
      
      <td align="left">
         
      </td>
    </tr>
    
    <tr>
      <td align="left" height="24">
        <strong>pos</strong>
      </td>
      
      <td align="right">
        2
      </td>
      
      <td align="left">
         
      </td>
    </tr>
    
    <tr>
      <td align="left" height="24">
        lib.loc
      </td>
      
      <td align="left">
        NULL
      </td>
      
      <td align="left">
        NULL
      </td>
    </tr>
    
    <tr>
      <td align="left" height="24">
        character.only
      </td>
      
      <td align="left">
        FALSE
      </td>
      
      <td align="left">
        FALSE
      </td>
    </tr>
    
    <tr>
      <td align="left" height="24">
        <strong>logical.return</strong>
      </td>
      
      <td align="left">
        FALSE
      </td>
      
      <td align="left">
         
      </td>
    </tr>
    
    <tr>
      <td align="left" height="23">
        warn.conflicts
      </td>
      
      <td align="left">
        TRUE
      </td>
      
      <td align="left">
        TRUE
      </td>
    </tr>
    
    <tr>
      <td align="left" height="24">
        quietly
      </td>
      
      <td align="left">
        FALSE
      </td>
      
      <td align="left">
        FALSE
      </td>
    </tr>
    
    <tr>
      <td align="left" height="24">
        <strong>verbose</strong>
      </td>
      
      <td align="left">
        getOption("verbose"))
      </td>
      
      <td align="left">
         
      </td>
    </tr>
  </tbody>
</table>

<p> 4 arguments sont en plus dans library :</p>

<ul>
<li><em>help</em> : permets d’afficher l’aide d’un package (ou au moins sa description) sans le charger ;</li>
<li><em>pos</em> : position dans la liste de recherche ;</li>
<li><em>logical.return</em> : retourne TRUE ou FALSE selon que le package soit correctement chargé. Avec cette option activée, <code>library()</code> s’approche de <code>require()</code> mais le premier retourne toujours une erreur alors que le second ne retourne qu’un warning;</li>
<li><em>verbose</em> : pour des informations supplémentaires.</li>
</ul>

<p><code>require()</code> présente un avantage lors de la création de package, est qu'il retourne un booléen indiquant si le package a été bien chargé ou non. Il peut être donc utilisé de la manière suivante :</p>

<pre><code># Si le package ne peut être chargé, l'installer
if (!require(dfexplore)) {

  #Installer le package
  install.packages("dfexplore")

  # Le charger. Arrête le script si chargement impossible.
  library(dfexplore)
}
</code></pre>

<h2>Conclusion</h2>

<p>La réponse courte est satisfaisante. Utiliser <code>library()</code> lors d’écriture de scripts simples et <code>require()</code> dans les fonctions, car ce dernier retourne un booléen permettant de vérifier si le package a bien été chargé.</p>

<h2>Mise à jour</h2>

<p>Yihui Xie vient d'écrire <a href="http://yihui.name/en/2014/07/library-vs-require/">un billet à ce sujet</a>.</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>11</wp:post_id>
		<wp:post_date>2014-02-27 19:29:20</wp:post_date>
		<wp:post_date_gmt>2014-02-27 18:29:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>r-library-vs-require</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="r"><![CDATA[GNU R]]></category>
		<category domain="post_tag" nicename="r"><![CDATA[GNU R]]></category>
		<category domain="post_tag" nicename="package"><![CDATA[package]]></category>
		<category domain="category" nicename="programmation"><![CDATA[Programmation]]></category>
		<category domain="post_tag" nicename="programmation"><![CDATA[Programmation]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Règles de codages sous R - Bibliographie</title>
		<link>http://jomuller.fr/?p=20</link>
		<pubDate>Fri, 11 Apr 2014 15:49:53 +0000</pubDate>
		<dc:creator><![CDATA[jomuller]]></dc:creator>
		<guid isPermaLink="false">http://chmilblick.fr/?p=20</guid>
		<description></description>
		<content:encoded><![CDATA[<p>La programmation sous R est très accessible car interactive et peu contraignante, que ce soit dans le fond (typage dynamique) ou dans la forme (pas d'indentation obligatoire comme dans Python). Ceci amène à une qualité de code très hétérogène en fonction des utilisateurs, en particulier sous sa forme, ce qui impact beaucoup sur sa lisibilité.</p>

<!--more-->

<p>Or un utilisateur de R passera plus de temps à relire son code qu'à l'écrire. De plus, il est courant de transmettre du code d'une personne à une autre dans une équipe. La lisibilité du code est donc cruciale. Dans cet article, je vais présenter une bibliographie touchant à ce problème de style de codage dans R. L'objectif plus général est de pouvoir écrire un "R Coding Style" adapté à l'activité de mon service.</p>

<h2>Méthode</h2>

<p>Plusieurs recherches ont été menées :</p>

<ul>
<li>recherche dans le moteur de recherche "Google" avec les mots clefs <a href="https://www.google.fr/search?q=R+Coding+style" target="_blank">"R coding style"</a> en ne gardant que les réponses pertinente de la première page de résultats.</li>
<li>Suivi systématique des références proposées dans les documents trouvés.</li>
<li>Recherche de la documentation sur des règles de codage générales indépendament du language a été recherché à l'aide de "Coding style" dans Google et Wikipedia.</li>
<li>Recherche  en Français sur Google avec les mots clefs "Règles de Codage R". Une sélection de documents a été retenu et rapidement décrite afin d'être utiliser comme base de travail pour le développement de notre propre règle de codage. </li>
</ul>

<h2>Résultats</h2>

<h3>R, Bonnes pratiques Document</h3>

<p><a href="http://cran.r-project.org/doc/contrib/Genolini-RBonnesPratiques.pdf">PDF en Français</a> de 19 pages proposé sur le site du CRAN. A la fois didactique et pratique. Excellente base de travail.</p>

<h3>R Style. An Rchaeological Commentary Document</h3>

<p><a href="http://cran.r-project.org/web/packages/rockchalk/vignettes/Rstyle.pdf" target="_blank">PDF de 12 pages librement accessible</a> sur le CRAN. Il donne des élements de réflexion et des élements pratiques. Bon point de départ en Anglais.</p>

<h3>Google's R Style Guide</h3>

<p><a href="https://google-styleguide.googlecode.com/svn/trunk/Rguide.xml#curlybraces" target="_blank">Page web</a>. A la fois complet et concis.</p>

<h3>Wikipedia</h3>

<p>Permet d'avoir d'avoir des notions générale sur les règles de codage en <a href="http://fr.wikipedia.org/wiki/R%C3%A8gles_de_codage">Français</a> et en <a href="http://en.wikipedia.org/wiki/Coding_style">Anglais</a>.</p>

<h3>PEP8</h3>

<p>Le <a href="http://legacy.python.org/dev/peps/pep-0008/" target="_blank">style de codage de Python</a>.</p>

<h3>R Coding Conventions</h3>

<p><a href="http://www.google.fr/url?sa=t&rct=j&q=&esrc=s&source=web&cd=2&ved=0CEUQFjAB&url=http%3A%2F%2Fcran.r-project.org%2Fweb%2Fpackages%2Frockchalk%2Fvignettes%2FRstyle.pdf&ei=XPpHU73DDKzY0QXMo4HIDg&usg=AFQjCNE2BVM0Jq-KkNEsS9TQcdGF9vwX_A&sig2=6zhAgs6P9tsQo77hMkvRNQ" target="_blank">Document collaboratif sur Google Docs</a> en cours de création. Permet d'avoir des choses très précises.</p>

<h3>Autres</h3>

<ul>
<li><a href="http://hadley.github.io/stat405/r-style-guide.html" target="_blank">Hadley Wickam</a></li>
<li><a href="http://4dpiecharts.com/r-code-style-guide/" target="_blank">4dpiecharts</a></li>
<li><a href="http://csgillespie.wordpress.com/2010/11/23/r-style-guide/" target="_blank">Style pour les étudiants</a></li>
</ul>

<h2>Conclusion</h2>

<p>Il existe déjà une abondante documentation sur les règles de codage en R. Cependant, il n'existe pas de consensus sur l’ensemble des règles de codage et la complexité de certaines règles ne sont pas applicables dans le cadre de mon service. Une règle de codage pour R spécifique pour mon service devra donc être décrite.</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>20</wp:post_id>
		<wp:post_date>2014-04-11 16:49:53</wp:post_date>
		<wp:post_date_gmt>2014-04-11 15:49:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>regles-de-codages-sous-r-bibliographie</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bonnes-pratiques"><![CDATA[Bonnes pratiques]]></category>
		<category domain="post_tag" nicename="coding-style"><![CDATA[Coding Style]]></category>
		<category domain="post_tag" nicename="francais"><![CDATA[Français]]></category>
		<category domain="category" nicename="r"><![CDATA[GNU R]]></category>
		<category domain="post_tag" nicename="r"><![CDATA[GNU R]]></category>
		<category domain="category" nicename="programmation"><![CDATA[Programmation]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Noms de fichiers sous Windows XP pour utilisation avec Latex et R</title>
		<link>http://jomuller.fr/?p=33</link>
		<pubDate>Fri, 02 May 2014 10:01:42 +0000</pubDate>
		<dc:creator><![CDATA[jomuller]]></dc:creator>
		<guid isPermaLink="false">http://chmilblick.fr/?p=33</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Dans la série des <a href="?cat=11">bonnes pratiques de codage sous R</a> dans le cadre de la consultation de méthodologie, je souhaite fixer une convention de nommage pour les noms de fichiers sous Windows XP. Ce système d'exploitation est certes <a href="http://windows.microsoft.com/en-US/windows/end-support-help" title="Windows XP end of Support">obsolète depuis le 8 avril 2014 </a>mais équipe encore l'ensemble des postes de travail mon service, et ce encore pour un petit bout de temps.</p>

<!--more-->

<p>Il pose de nombreux problèmes en particulier sur la gestion des jeux de caractères type UTF-8. De plus nous utilisons beaucoup LaTeX dans notre service. Ce dernier est très <a href="http://stackoverflow.com/questions/2444385/include-a-tex-file-with-spaces-in-the-filename" title="Latex spaces on StackOverFlow">sensible aux noms de fichiers exotiques</a>, en particulier avec des espaces.</p>

<h2>Proposition Pour éviter ces désagréments, une règle simple : tous les noms de fichier et de dossiers doivent être écrits en utilisant exclusivement les caractères ASCII allant de a-z et A-Z sans aucun caractère spécial, avec comme exceptions le underscore "_" (celui du 8) et le tiret court "-" (celui du 6). Tolérance sur les espaces pour les dossiers, aucune pour les fichiers. Les fichiers de scripts R doivent toujours se terminer avec l'extension</h2>

<p><em>.R</em></p>

<h2>Exemples</h2>

<h2>Bons noms de fichier "un_script.R" "Rscripts/unAutreScript.R"</h2>

<h2>Mauvais "un script.R" "un_script.r" "R script/unAutreScript.R"</h2>

<h2>Conclusion Permet de fonctionner correctement même lorsque déplace un projet vers un autre environnement.</h2>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>33</wp:post_id>
		<wp:post_date>2014-05-02 11:01:42</wp:post_date>
		<wp:post_date_gmt>2014-05-02 10:01:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>noms-de-fichiers-sous-windows-xp-pour-utilisation-avec-latex-et-r</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bonnes-pratiques"><![CDATA[Bonnes pratiques]]></category>
		<category domain="category" nicename="r"><![CDATA[GNU R]]></category>
		<category domain="category" nicename="programmation"><![CDATA[Programmation]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Outils de développement de package R sous Windows XP</title>
		<link>http://jomuller.fr/?p=57</link>
		<pubDate>Wed, 07 May 2014 06:16:00 +0000</pubDate>
		<dc:creator><![CDATA[jomuller]]></dc:creator>
		<guid isPermaLink="false">http://chmilblick.fr/?p=57</guid>
		<description></description>
		<content:encoded><![CDATA[<p>L'objectif de cet article est définir les outils idéaux pour développer des package R</p>

<!--more-->

<h2>Méthode</h2>

<p>Documentation et essais. OS imposé par l'environnement de travail (Windows XP).</p>

<h2>Résultat</h2>

<p>A ce jour, mes outils logiciels pour le développement de packages sont :</p>

<ul>
<li>OS : Windows XP (imposé)</li>
<li><a href="http://www.r-project.org/">R</a> version 3.1.0 + <a href="http://cran.r-project.org/bin/windows/Rtools/">Rtools</a></li>
<li>IDE pour R : <a href="http://www.rstudio.com/">RStudio</a> </li>
<li>Éditeur texte : <a href="http://www.sublimetext.com/">Sublime Text 3</a></li>
<li>Documentation : <a href="http://miktex.org/">miktex</a>, package R "<a href="http://cran.r-project.org/web/packages/roxygen2/index.html">roxygen2</a>"</li>
<li>Tests unitaires : package R "<a href="http://cran.r-project.org/web/packages/testthat/">testthat</a>"</li>
<li>Système de gestion des versions : <a href="http://www.git-scm.com/">Git</a></li>
</ul>

<h2>Conclusion</h2>

<p>Ces outils me semblent efficaces et fonctionnent bien ensemble actuellement. Il serait bon de prévoir un workflow comme <a href="http://hopstat.wordpress.com/2014/05/06/smart-hackathon-day-2-writing-packages-in-rstudio/">décrit ici</a>.</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>57</wp:post_id>
		<wp:post_date>2014-05-07 07:16:00</wp:post_date>
		<wp:post_date_gmt>2014-05-07 06:16:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>outils-de-developpement-de-package-r</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="r"><![CDATA[GNU R]]></category>
		<category domain="category" nicename="programmation"><![CDATA[Programmation]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>.Rbuildignore</title>
		<link>http://jomuller.fr/?p=78</link>
		<pubDate>Wed, 21 May 2014 18:21:10 +0000</pubDate>
		<dc:creator><![CDATA[jomuller]]></dc:creator>
		<guid isPermaLink="false">http://chmilblick.fr/?p=78</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Lors de la construction d'un package, il peut être utile d'ignorer certains fichiers présents dans le projet. Pour ce faire, on peut créer un fichier <code>.Rbuildignore</code> comme indiqué dans la <a href="http://cran.r-project.org/doc/manuals/R-exts.html#index-_002eRbuildignore-file">documentation du CRAN</a>.</p>

<!--more-->

<p>Le fichier <code>.Rbuildignore</code> doit être à la racine du dossier du package. Ce fichier consiste en une liste d'expressions régulière de fichier à exclure, une par ligne. Ces expressions ne sont pas sensibles à la case.</p>

<p>D'après <a href="http://cran.r-project.org/doc/manuals/R-exts.html#index-_002eRbuildignore-file">le manuel</a>, certains fichiers sont inutiles à indiquer car automatiquement ignorés par <code>R CMD Build</code> :</p>

<ul>
<li>Les dossiers : 

<ul>
<li>Les dossiers des <a href="https://fr.wikipedia.org/wiki/Logiciel_de_gestion_de_versions">VCS</a> (<code>CVS/</code>, <code>.svn/</code>, <code>.arch-ids/</code>, <code>.bzr/</code>, <code>.git/</code> ou <code>.hg/</code>).</li>
<li>Les dossiers de l'IDE eclispe (<code>.metadata/</code>)</li>
<li>Les dossiers dont les noms terminent par <code>.Rcheck</code>, <code>Old</code> ou <code>old</code></li>
</ul></li>
<li>Les fichiers 

<ul>
<li><code>GNUMakefile</code>, <code>Read-and-delete-me</code> </li>
<li>dont les noms commencent par <code>.#</code> ou débutent et finissent par <code>#</code></li>
<li>dont les noms terminent par <code>~</code>, <code>.bak</code> ou <code>.swp</code></li>
<li>les fichiers présents dans les dossiers <code>R/</code>, <code>demo/</code> et <code>man</code> n'ayant pas des noms valides.</li>
</ul></li>
</ul>

<p>J'ai également remarqué que sous la version 3.1.0 de R, en retirant le fichier <code>.Rbuildignore</code> puis en listant les fichiers du package par <code>ls -la</code> que certains autres fichiers sont retirés tous les fichiers dont le nom débute par un point. Donc pas uniquement les <code>.#</code>. Ceci fait qu'il me parait inutile d'ajouter par exemple <code>.gitignore</code> ou <code>.DS_Store</code> sous OS X.</p>

<p>Au final, mon <code>.Rbuildignore</code> ressemble à ceci</p>

<pre><code># Ignores these files when building. For more information about
# .Rbuildignore, see
# http://cran.r-project.org/doc/manuals/R-exts.html#index-_002eRbuildignore-file

# Rstudio Files
^.*.Rproj$

# GitHub files
README.md
</code></pre>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>78</wp:post_id>
		<wp:post_date>2014-05-21 19:21:10</wp:post_date>
		<wp:post_date_gmt>2014-05-21 18:21:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rbuildignore</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="r"><![CDATA[GNU R]]></category>
		<category domain="post_tag" nicename="r"><![CDATA[GNU R]]></category>
		<category domain="post_tag" nicename="package"><![CDATA[package]]></category>
		<category domain="category" nicename="package-r"><![CDATA[Package R]]></category>
		<category domain="category" nicename="programmation"><![CDATA[Programmation]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Quel nom pour un package R?</title>
		<link>http://jomuller.fr/?p=89</link>
		<pubDate>Sat, 14 Jun 2014 07:53:41 +0000</pubDate>
		<dc:creator><![CDATA[jomuller]]></dc:creator>
		<guid isPermaLink="false">http://chmilblick.fr/?p=89</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Le nom d’un package R est une étape qui me parait importante. En effet, ce nom sera le premier contact avec l’utilisateur et il sera également souvent appelé à l’aide des fonctions <code>library()</code> ou <code>require()</code>. Ce nom doit donc à la fois avoir du sens, donner une indication claire sur ce que permet le package et en même temps être facile à écrire pour pouvoir être appelé sans erreur.</p>

<!--more-->

<p>Il <a href="http://cran.r-project.org/web/packages/">existe sur le CRAN</a> plus de 5000 packages. Ainsi il faut aussi éviter de choisir un nom déjà existant ou proche, qui risquerait de créer de la confusion auprès de l’utilisateur.</p>

<p>L’objectif de cet article est de décrire quelles sont les règles les plus adéquates pour trouver un bon nom pour un package R étant destiné à être publié sur le CRAN.</p>

<h2>Méthode</h2>

<p>Une recherche a été effectuée d’abord sur <a href="http://r-project.org">r-project.org</a> afin de trouver une documentation officielle sur le sujet. Ensuite le nom des <a href="http://cran.r-project.org/web/packages/">packages déjà existant</a> sur le CRAN a été analysé. Une recherche plus large a été effectuée sur un moteur de recherche généraliste. Enfin, une question a été posée sur le site de question-réponse <a href="http://stackoverflow.com/">stackoverflow</a>.</p>

<h2>Résultats</h2>

<h3>Documentation officielle</h3>

<p>La seule référence au nom du package trouvé dans la documentation sur la création de packages, « <a href="http://cran.r-project.org/doc/manuals/r-release/R-exts.html">Writing R Extensions</a> », concerne le champ <code>package</code> dans le <a href="http://cran.r-project.org/doc/manuals/r-release/R-exts.html#The-DESCRIPTION-file">chapitre sur le fichier <code>DESCRIPTION</code></a>. Il est indiqué :</p>

<blockquote>
  <p>The mandatory ‘Package’ field gives the name of the package. This should contain only (ASCII) letters, numbers and dot, have at least two characters and start with a letter and not end in a dot. En résumé, les contraintes sont :</p>
</blockquote>

<ul>
<li>Uniquement des caractères ASCII [a-z], [A-Z], [0-9], et [.] ;</li>
<li>Longueur > à 2 caractères ;</li>
<li>Le premier caractère doit être une lettre ;</li>
<li>Ne doit pas finir avec un point.</li>
</ul>

<p>Donc aucune limite en terme de nombre de caractères.</p>

<h3>Vérifier la disponibilité</h3>

<p>La deuxième étape pour choisir un nom est d’éviter qu’il soit déjà utilisé. Pour se faire, on peut suivre les instructions proposées dans cette <a href="http://stackoverflow.com/questions/7381932/names-of-r-packages">question de stackoverflow</a>, en particulier l’utilisation de la fonction <code>available.packages()</code> afin d’explorer les packages existant sur le CRAN.</p>

<p>En plus de la liste des packages du CRAN, il serait bon d’analyser également ceux de <a href="http://www.bioconductor.org/packages/release/BiocViews.html#___Software">Bioconductor</a> et également ceux en cours de développement sur <a href="https://github.com/search?l=R&amp;o=desc&amp;q=package&amp;ref=advsearch&amp;s=updated&amp;type=Repositories">GitHub</a> et <a href="http://r-forge.r-project.org/">R-Forge</a></p>

<h3>Règles de nommage</h3>

<p>Tout comme il existe des <a href="http://adv-r.had.co.nz/">règles pour écrire du code propre</a>, en particulier sur le nommage des variables, on peut imaginer des règles pour le nom des packages. Après avoir posé la <a href="http://stackoverflow.com/questions/24201568/whats-a-good-r-package-name">question sur stackoverflow</a>, il apparait que la seule référence intéressante est le chapitre « <a href="http://adv-r.had.co.nz/Package-basics.html">Package basics</a> » de l’ouvrage « <a href="http://adv-r.had.co.nz/">Advanced R</a> » en cours de rédaction par Hadley Wickham. Le paragraphe « Getting started » donne les indications suivantes en plus de celles du CRAN :</p>

<ul>
<li>Le nom doit être facilement trouvé s’il est recherché dans Google ;</li>
<li>Éviter de mélanger les lettres majuscules et minuscules ;</li>
<li>Utiliser des abréviations ;</li>
<li>Ajouter un « R » dans le nom ;</li>
<li>Trouver un nom évocateur et le modifier pour qu’il soit unique.</li>
</ul>

<h2>Conclusion</h2>

<p>Le nom d’un package R doit être à la fois significatif et en même temps facile à écrire. Ce choix de nom s’apparente aux bonnes pratiques de codages que nous avions déjà décrites dans un <a href="http://adv-r.had.co.nz/">précédent article</a>.</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>89</wp:post_id>
		<wp:post_date>2014-06-14 08:53:41</wp:post_date>
		<wp:post_date_gmt>2014-06-14 07:53:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>quel-nom-pour-un-package-r</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bonnes-pratiques"><![CDATA[Bonnes pratiques]]></category>
		<category domain="category" nicename="r"><![CDATA[GNU R]]></category>
		<category domain="category" nicename="package-r"><![CDATA[Package R]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Un nom pour le prochain package</title>
		<link>http://jomuller.fr/?p=126</link>
		<pubDate>Mon, 23 Jun 2014 07:20:52 +0000</pubDate>
		<dc:creator><![CDATA[jomuller]]></dc:creator>
		<guid isPermaLink="false">http://jomuller.fr/?p=126</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Dans un <a href="http://jomuller.fr/?p=89">précédent billet</a>, je considérai que trouver un bon nom pour un package R était important et faisait partie de l’ergonomie du logiciel. Dans ce billet, je vais appliquer ceci à la recherche d’un nom pour mon prochain package. Ce package a comme objectif de créer des scripts permettant l’import rigoureux de variables à partir d’un cahier de variable dans le cadre d’une consultation méthodologique. Expliqué comme ceci en une phrase, ça ne doit pas sembler très clair. Raison de plus pour que le nom aide à sa compréhension!</p>

<!--more-->

<h2>À quoi sert ce package ?</h2>

<p>Pour trouver un nom adéquat, il faut d’abord être au clair avec l’objectif principal du package et tenter d’en définir les limites. Pour ma part, j’en arrive à cette phase qu’une fois le package bien avancé et déjà en partie documenté. Un peu comme lorsque l’on écrit un article et l’on choisit un titre à la fin, je crois qu’il faut choisir le nom du package que juste avant sa publication.</p>

<p>Dans le cas de mon package, il sert à créer des scripts R à partir de définition de variables. L’idée centrale est d’être très explicite dans la description des variables afin d’éviter des erreurs d’analyses par la suite. Par exemple une variable définissant l’évènement décès d’un patient est une variable catégorielle à deux modalités <em>Vivant</em> ou <em>Décédé</em>. Elle peut être codée de manière variée selon la base de données : parfois <em>v</em> et <em>d</em>, ou <em>d</em> et <em>a</em> (dead or alive) ce qui est relativement explicite, mais parfois <em>0</em> et <em>1</em>, ou <em>1</em> et <em>2</em> ce qui l’est beaucoup moins. L’idée est de définir dans un cahier de variable les caractéristiques de cette variable. Elle serait dans ce cas :</p>

<ul>
<li>Nom de la variable dans R : <em>death</em></li>
<li>Étiquette de la variable : <em>Statut vital</em></li>
<li>Description : <em>Statut vital du patient au moment du suivi</em></li>
<li>Type : <em>Catégorielle</em></li>
<li>Modalités : <em>0</em> = <em>mort</em>, <em>1</em> = <em>vivant</em></li>
<li>Commentaire : <em>les données manquantes (“NA”) existent lorsque le statut vital n’a pas pu être vérifié. Ces cas doivent être écartés de l’analyse</em></li>
</ul>

<p>En ayant ceci, je n’ai pas de doute sur la manière d’utiliser la variable. Je ne risque pas de perdre des heures à me lancer dans une analyse de survie en croyant que <em>1</em> = <em>mort</em> et en arrivant à des conclusions me laissant imaginer que je vais pouvoir faire un <em>Lancet</em>. Je comprends également tout de suite comment je vais devoir traiter les données manquantes pour cette variable. Enfin, l’étiquette va me permettre de créer proprement mes légendes sur mes tableaux et graphiques.</p>

<p>Pour importer toutes ces informations dans R, pour une variable, ça irait assez vite.</p>

<pre><code>death &lt;- factor(death, levels = c(0, 1), labels = c(“mort”, “vivant”))
</code></pre>

<p>Cependant, une base de données contient rarement une seule variable. Dans ma pratique, elles en contiennent plutôt quelques dizaines (souvent plus de cinquante), avec des noms assez peu explicites. L’idée initiale est donc de remplir un <em>cahier de variable</em> avec la personne qui me remet la base de données. Ce cahier de variable est un simple fichier tabulé (.csv, .odt ou .xlsx) contenant les colonnes suivantes :</p>

<ul>
<li><strong>Nom de la variable dans R</strong> : C’est le nom que je vais définir à utiliser dans R. Il suit les bonnes pratiques, à savoir il est raisonnablement court, explicite et ne contient que des caractères autorisés.</li>
<li><strong>Étiquette de la variable</strong> : C’est ce qui apparaitra dans les graphiques et tableaux du rapport final. Il est défini par la personne qui me consulte et correspond souvent au nom initial de ses variables dans sa base de données.</li>
<li><strong>Description</strong> : Une courte description de la variable qui pourra apparaitre dans le rapport final, permettant de comprendre la variable, son contexte.</li>
<li><strong>Type</strong> : Le type de variable, quantitative (numérique ou entier), catégorielle (non ordonnée ou ordonnée), date, chaine de caractère</li>
<li><strong>Unité</strong> : utilisé pour construire les légendes. Pour les dates, donne le format de date (par exemple %d/%m/%Y pour 10/06/2014)</li>
<li><strong>Modalités</strong> : Définition des couples de <em>clef</em> (ou <em>level</em>) avec un <em>nom de modalité</em> (ou <em>label</em>).</li>
<li><strong>Commentaire</strong> : Un commentaire pouvant guider l’analyse. Ne sera pas repris dans le rapport.</li>
</ul>

<p>À partir de ce cahier de variable, j’ai l’habitude de revoir variable par variable l’importation dans R, afin de m’assurer que tout soit rigoureusement importé afin de gagner du temps par la suite. Je recode les catégorielles, fait toujours un petit summary pour chaque variable, ainsi qu’une petite représentation graphique pour voir les distributions. Souvent, je remets un fichier généré à partir du .Rmd sous la forme d’un HTML à la personne qui me consulte afin qu’il que le processus d’importation soit traçable et reproductible.</p>

<p>J’ai donc créé de petits scripts permettant de générer rapidement des squelettes de scripts en fonction du type de variable. J’ai étendu ces scripts sous forme de package.</p>

<p>Ceci donne actuellement pour une variable :</p>

<pre><code>library(easydm)

# Créer une variable
vardeath &lt;- Descvar(
       rname = "death", 
       varlabel = "État vital", 
       type = "factor", 
       comment = "Statut vital du patient au moment du suivi", 
       levels = 0:1, 
       names = c("mort", "vivant")
  )
vardeath
# rname = death 
# varlabel = État vital 
# type = factor 
# comment = Statut vital du patient au moment du suivi 
# levels = 0, 1 
# names = mort, vivant 
# Créer une sortie 
create_dm(vardeath, template = import_template())

# #- Start of the script in R -#
# ######### Datamanagement script ##########
# # import data
# 
# rep_rawdata &lt;- read.csv( "rep_path_to_database", stringsAsFactors =F)
# 
# # Change headers
# variables_df &lt;- read.csv( "rep_path_to_database")
# names(rep_rawdata) &lt;- variables_df$var_name
# 
# # Make a copy
# rep_cleandata &lt;- rep_rawdata
# 
# ####### Clean the variable death #####
# 
# # explore the raw data
# head(raw_data$death)
# str(raw_data$death)
# 
# # Set it as a factor
# clean_data$death &lt;- factor(
#   x = raw_data$death,
#   levels = c('0', '1'),
#   labels = c('mort', 'vivant'),
#   ordered = FALSE
# )
# # set the label
# attr(clean_data$death, "label") &lt;- "État vital"
# 
# head(clean_data$death)
# str(clean_data$death)
# summary(clean_data$death)
# 
# # number of NA
# 
# sum(is.na(clean_data$death))
# # Make a plot
# plot(clean_data$death)
# ##### watch all ######
# 
# str(rep_cleandata)
# 
# ####### Save the cleaned data ######
# save(rep_cleandata, file="produced_data/clean_data.Rdata"
#      #- End of the script in R -#
</code></pre>

<p>Et l’on peut faire la même chose à partir d’un cahier de variable complet que l’on importe avec la fonction <em>import_vardef()</em>.</p>

<h2>Quel nom ?</h2>

<p>Pour l’instant mon package se nomme <em>easydm</em> pour <em>easy datamanagement</em>. Mais comme me l’a fait remarquer un de mes enseignants, ceci n’est pas du datamagement. Il s’agit plus de créer des squelettes de scripts à partir de définition de variable. Voici mes quelques recherches de noms :</p>

<ul>
<li>importr</li>
<li>variable to script 

<ul>
<li>vartoscript</li>
<li>vtos</li>
<li>vartos</li>
<li>vartors</li>
<li>vardeftors</li>
</ul></li>
<li>description to script 

<ul>
<li>desctor</li>
<li>descscript</li>
</ul></li>
<li>description to program</li>
<li>program template</li>
<li>fast import script skeleton</li>
<li>importskeleton</li>
</ul>

<p>Au final, je retiens <em>vartors</em> qui peut se titrer <em>Variable definition To R Script skeleton</em>. Il suit les règles de nommage d’un package et n’est pas encore utilisé sur le CRAN. De plus, c’est un mot-clé qui ne semble pas encore beaucoup utilisé lorsque l’on cherche sur Google donc il sera facilement trouvable.</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>126</wp:post_id>
		<wp:post_date>2014-06-23 08:20:52</wp:post_date>
		<wp:post_date_gmt>2014-06-23 07:20:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>un-nom-pour-le-prochain-package</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="r"><![CDATA[GNU R]]></category>
		<category domain="post_tag" nicename="r"><![CDATA[GNU R]]></category>
		<category domain="post_tag" nicename="nom-package"><![CDATA[nom package]]></category>
		<category domain="post_tag" nicename="package"><![CDATA[package]]></category>
		<category domain="category" nicename="package-r"><![CDATA[Package R]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Histogramme de densité avec courbe de densité et courbe normale</title>
		<link>http://jomuller.fr/?p=137</link>
		<pubDate>Fri, 11 Jul 2014 13:44:52 +0000</pubDate>
		<dc:creator><![CDATA[jomuller]]></dc:creator>
		<guid isPermaLink="false">http://jomuller.fr/?p=137</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Pour les variables qualitatives, il est utile de représenter leurs valeurs sur un histogramme. Une courbe de densité permet également d'apprécier la normalité. Et pour la comparer à une courbe de densité normale, il est utile la représenter en utilisant la moyenne et l'écart type de l'échantillon.</p>

<p>Pour créer ce graphique complexe mais utile sous ggplot2,</p>

<p><a href="http://jomuller.fr/wp-content/uploads/2014/07/Densite-normale.png"><img src="http://jomuller.fr/wp-content/uploads/2014/07/Densite-normale-300x287.png" alt="Densite normale" width="300" height="287" class="alignnone size-medium wp-image-142" /></a></p>

<p>une <a href="http://stackoverflow.com/a/6967799/2007150">réponse sur StackOverflow</a> propose propose d'utiliser la commande suivante. La variable age est un simple vecteur numérique :</p>

<pre><code>qplot(age, geom = "blank") + 
geom_histogram(aes(y = ..density..),  binwidth=1) +
stat_density(geom = "line", size=2, alpha = 0.5, aes(colour = "bla")) + 
stat_function(fun=dnorm, size=2, alpha = 0.5, aes(x = age, colour = "blabla"), args=list(mean = mean(age) ,
                          sd =  sd(age))) + 
scale_colour_manual(name = "", values = c("blue", "green"), 
                               breaks = c("bla", "blabla"), 
                               labels = c("Estimation de la densité", "courbe normale")) + 
theme(legend.position = "bottom", legend.direction = "horizontal")
</code></pre>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>137</wp:post_id>
		<wp:post_date>2014-07-11 14:44:52</wp:post_date>
		<wp:post_date_gmt>2014-07-11 13:44:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>histogramme-de-densite-avec-courbe-de-densite-et-courbe-normale</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="cookbook"><![CDATA[Cookbook]]></category>
		<category domain="post_tag" nicename="ggplot2"><![CDATA[ggplot2]]></category>
		<category domain="category" nicename="r"><![CDATA[GNU R]]></category>
		<category domain="post_tag" nicename="r"><![CDATA[GNU R]]></category>
		<category domain="post_tag" nicename="graphiques"><![CDATA[graphiques]]></category>
		<category domain="post_tag" nicename="histogramme"><![CDATA[histogramme]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Présentation au CAISP 2014</title>
		<link>http://jomuller.fr/?p=151</link>
		<pubDate>Mon, 21 Jul 2014 13:46:56 +0000</pubDate>
		<dc:creator><![CDATA[jomuller]]></dc:creator>
		<guid isPermaLink="false">http://jomuller.fr/?p=151</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Lors du <a href="http://www.clisp.fr/joomla/evenements/passes/285-journees-2014">Congrès Annuel des internes de Santé Publique</a> qui à eu lieu le 25 juin 2014 à Paris Cochin, j'ai présenté l'avancée de mon travail sur le <a href="https://github.com/jomuller/vartors">package vartors</a> dans une présentation intitulée <em>Développement d'une aide logicielle pour l'activité de consultation méthodologique</em>. Vous pouvez retrouver la présentation avec mes commentaires audio dans la vidéo ci-dessous.</p>

<p><!--more--><video width="400" height="300" controls="controls" preload="none" poster="http://files.jomuller.fr/presentations/caisp2014/caisp_videoposter.jpg"> <source src="http://files.jomuller.fr/presentations/caisp2014/caisp2014.mp4" type="video/mp4" /> <source src="http://files.jomuller.fr/presentations/caisp2014/caisp2014.webm" type="video/webm" /> </video></p>

<p>Si le lecteur vidéo ne s'affiche pas, vous pouvez <a href="http://files.jomuller.fr/presentations/caisp2014/caisp2014.mp4">télécharger la vidéo au format <code>.mp4</code></a> et la lire par exemple avec le <a href="http://www.videolan.org/vlc/">logiciel VLC</a>.</p>

<p>La présentation est également <a href="http://files.jomuller.fr/presentations/caisp2014/vartors_caisp2014.pdf">disponible en PDF</a>.</p>

<p>Vos commentaires sont les bienvenus, que ce soit sur le fond ou la forme!</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>151</wp:post_id>
		<wp:post_date>2014-07-21 14:46:56</wp:post_date>
		<wp:post_date_gmt>2014-07-21 13:46:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>151</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="consultation-methodologie"><![CDATA[Consultation en méthodologie]]></category>
		<category domain="category" nicename="r"><![CDATA[GNU R]]></category>
		<category domain="category" nicename="package-r"><![CDATA[Package R]]></category>
		<category domain="post_tag" nicename="pdf"><![CDATA[PDF]]></category>
		<category domain="category" nicename="presentations"><![CDATA[Présentations]]></category>
		<category domain="category" nicename="vartors"><![CDATA[vartors]]></category>
		<category domain="post_tag" nicename="video"><![CDATA[Vidéo]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>enclosure</wp:meta_key>
			<wp:meta_value><![CDATA[http://files.jomuller.fr/presentations/caisp2014/caisp2014.webm
21624561
video/webm
]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>enclosure</wp:meta_key>
			<wp:meta_value><![CDATA[http://files.jomuller.fr/presentations/caisp2014/caisp2014.mp4
15003687
video/mp4
]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_post_restored_from</wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:20:"restored_revision_id";i:154;s:16:"restored_by_user";i:2;s:13:"restored_time";i:1406018641;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>aRt</title>
		<link>http://jomuller.fr/?p=181</link>
		<pubDate>Mon, 11 Aug 2014 07:24:22 +0000</pubDate>
		<dc:creator><![CDATA[jomuller]]></dc:creator>
		<guid isPermaLink="false">http://jomuller.fr/?p=181</guid>
		<description></description>
		<content:encoded><![CDATA[<p>J'utilise presque exclusivement <a href="http://docs.ggplot2.org/current">ggplot2</a> pour mes graphiques. J'apprécie beaucoup la souplesse qu'il procure. Cependant je me perds régulièrement dans les options et il m'arrive souvent d'avoir des résultats assez étonnants. Le dernier en date (ci-dessous) est assez psychédélique.</p>

<p><a href="http://jomuller.fr/wp-content/uploads/2014/08/densityplot.png"><img src="http://jomuller.fr/wp-content/uploads/2014/08/densityplot-300x225.png" alt="densityplot" width="300" height="225" class="alignnone size-medium wp-image-182" /></a></p>

<p>Ce devait être à l'origine un simple histogramme dont le code était</p>

<p><code>ggplot(clean_data) + aes(x = mois, fill = poludom) + geom_bar()</code></p>

<p>Mais lors d'un copié-collé un peu hâtif, j'ai remplacé le <code>geom_bar</code> par un <code>geom_density</code>.</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>181</wp:post_id>
		<wp:post_date>2014-08-11 08:24:22</wp:post_date>
		<wp:post_date_gmt>2014-08-11 07:24:22</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>art</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="ggplot2"><![CDATA[ggplot2]]></category>
		<category domain="category" nicename="r"><![CDATA[GNU R]]></category>
		<category domain="post_tag" nicename="graphiques"><![CDATA[graphiques]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Vartors 0.2.6 sur le CRAN</title>
		<link>http://jomuller.fr/?p=187</link>
		<pubDate>Wed, 13 Aug 2014 00:14:21 +0000</pubDate>
		<dc:creator><![CDATA[jomuller]]></dc:creator>
		<guid isPermaLink="false">http://jomuller.fr/?p=187</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Le package <em>vartors</em> a été accepté <a href="http://cran.r-project.org/web/packages/vartors/index.html">sur le CRAN</a> aujourd'hui. Il est désormais disponible directement dans <em>R</em> avec l'instruction :</p>

<p><code>install.packages("vartors")</code></p>

<p>N'hésitez pas à me faire des retours sur la <a href="https://github.com/jomuller/vartors">page GitHub du package</a>!</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>187</wp:post_id>
		<wp:post_date>2014-08-13 01:14:21</wp:post_date>
		<wp:post_date_gmt>2014-08-13 00:14:21</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>vartors-0-2-6-sur-le-cran</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="r"><![CDATA[GNU R]]></category>
		<category domain="category" nicename="package-r"><![CDATA[Package R]]></category>
		<category domain="category" nicename="vartors"><![CDATA[vartors]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Mémoire de Master 2</title>
		<link>http://jomuller.fr/?p=190</link>
		<pubDate>Tue, 23 Sep 2014 06:17:32 +0000</pubDate>
		<dc:creator><![CDATA[jomuller]]></dc:creator>
		<guid isPermaLink="false">http://jomuller.fr/?p=190</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Mon mémoire du <a href="http://www.master-sante-publique.u-psud.fr/master-4.html">Master 2 <em>Méthodologie et Statistiques en Recherche Biomédicale</em></a> <a href="http://jomuller.fr/wp-content/uploads/2014/09/M2MSR-Memoire-Joris_MULLER_corrige.pdf">peut être téléchargé ici au format PDF (704 Ko)</a>. Il porte sur la <em>Conception d’un package R pour faciliter la définition, l’adaptation et l’analyse descriptive systématique de chaque variable d’un tableau de données</em>. Le package en question est <a href="https://github.com/jomuller/vartors"><em>vartors</em></a> dont je parle dans <a href="http://jomuller.fr/?cat=27">quelques billets sur ce blog</a>.</p>

<p>Ce document en Français pourra peut-être intéresser les personnes souhaitant développer un package pour R, car j'y décris les outils et les techniques pour y parvenir.</p>

<p>Vous pouvez également <a href="http://jomuller.fr/wp-content/uploads/2014/09/diaporama_soutenance.pdf">télécharger ma présentation de ce mémoire</a> que j'ai soutenu le 3 septembre 2014 à Paris Sud.</p>

<p>L'ensemble de ce travail est sous licence Creative Commons comme décrit ci-dessous.</p>

<p><a rel="license" href="http://creativecommons.org/licenses/by-nc/4.0/"><img alt="Licence Creative Commons" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png" /></a><br />
<span xmlns:dct="http://purl.org/dc/terms/" href="http://purl.org/dc/dcmitype/Text" property="dct:title" rel="dct:type"><em>Conception d’un package R pour faciliter la définition, l’adaptation et l’analyse descriptive systématique de chaque variable d’un tableau de données</em></span> de <a xmlns:cc="http://creativecommons.org/ns#" href="http://jomuller.fr/?p=190" property="cc:attributionName" rel="cc:attributionURL">Joris Muller</a> est mis à disposition selon les termes de la <a rel="license" href="http://creativecommons.org/licenses/by-nc/4.0/">licence Creative Commons Attribution - Pas d’Utilisation Commerciale 4.0 International</a>.</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>190</wp:post_id>
		<wp:post_date>2014-09-23 07:17:32</wp:post_date>
		<wp:post_date_gmt>2014-09-23 06:17:32</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>memoire-de-master-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="m2msr"><![CDATA[M2MSR]]></category>
		<category domain="post_tag" nicename="master-2"><![CDATA[Master 2]]></category>
		<category domain="category" nicename="vartors"><![CDATA[vartors]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Documents pour préparer sa thèse en médecine</title>
		<link>http://jomuller.fr/?p=199</link>
		<pubDate>Sat, 27 Sep 2014 09:25:06 +0000</pubDate>
		<dc:creator><![CDATA[jomuller]]></dc:creator>
		<guid isPermaLink="false">http://jomuller.fr/?p=199</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>Contexte</h2>

<p>La thèse d'exercice est un <a href="http://www.legifrance.gouv.fr/affichTexte.do?cidTexte=JORFTEXT000000781658&amp;dateTexte=&amp;categorieLien=id#JORFARTI000001913925">passage obligé pour achever ses études médicales</a> et donc devenir docteur en médecine. Elle est préparée en général en plus du travail quotidien dans les services de l'interne, souvent sur son temps libre. Elle n'a pas la portée d'une thèse d'université et est plutôt une <strong>initiation à la recherche</strong>.</p>

<p>Cependant, les candidats sont souvent mal préparés à cet exercice et leurs encadrants n'y pas pas pas plus formés. Une aide méthodologique est nécessaire pour produire une thèse de qualité et pour que cet exercice ai un minimum d'intérêt pédagogique. Cette aide porte autant sur le choix du sujet, de la définition d'une bonne question, d'un objectif, de la réalisation de la bibliographie que du choix de la méthode (quantitative ou qualitative), de sa réalisation et de l'écriture du document final.</p>

<p>Cet article a pour objectif d'<strong>identifier des ressources facilement accessible permettant de mieux préparer son travail de thèse d'exercice en médecine</strong>.</p>

<!--more-->

<h2>Méthode</h2>

<p>Une recherche libre sur le Web à l'aide du moteur <a href="https://duckduckgo.com">DuckDuckGo</a> a été effectuée le 23 septembre 2014 avec les mots clefs <a href="https://duckduckgo.com/?q=aide+m%C3%A9thodologique+th%C3%A8se+m%C3%A9decine">"aide méthodologique thèse médecine"</a>. Seuls les 20 premiers résultats de cette recherche ont été explorés. Les liens donnés dans ces pages (page Web, PDF ou ouvrage papier) ont été recherchés. Les documents sélectionnés devaient être soit au format HTML, PDF ou être une référence papier facile à trouver dans une bibliothèque universitaire, être en langue Française, être compréhensible par un interne en médecine n'ayant pas d'expérience en recherche et le ou les auteurs de ces documents devaient être clairement identifiés.</p>

<h2>Résultats</h2>

<h3>Guide pratique du thésard - Pr Hervé Maisonneuve</h3>

<p>Le <em>Guide pratique du thésard</em> du Pr Hervé Maisonneuve me paraît être le <strong>premier document à lire</strong> par tout candidat, <strong>avant même de débuter</strong> son travail de thèse, car il aborde l'ensemble du problème, du choix d'un directeur de thèse à la soutenance. Il très didactique et agréable à lire. Il compte 84 pages et est lu en environ 3h. Il est <strong>gratuitement disponible</strong> est un document <a href="http://www.sanofi.fr/l/fr/fr/download.jsp?file=D7889C86-3DBB-42A9-8925-2C1325D946EB.pdf">au format PDF sur le site du laboratoire Sanofi</a>.</p>

<h3>Initiation à la recherche - Dr Paul Frappé</h3>

<p>Le livre du Dr Paul Frappé, <em>Initiation à la recherche</em>, donne les bases pour effectuer un travail de recherche. Il est écrit par un médecin généraliste pour les futurs médecins, donc particulièrement adapté aux internes en médecine. Il est facilement disponible dans toute <a href="http://www.sudoc.fr/155097342">Bibliothèque universitaires</a> et dans les <a href="http://www.unitheque.com/fiche.php?idarticle=42616&amp;#.VCkjHlddqno">librairies</a>.</p>

<p>Il aborde de manière très pédagogique et très illustrée (avec beaucoup de couleurs) les champs de recherche en médecine générale, la formulation d'une question, le recueil, l'analyse, la rédaction et d'autres thème. Ce serait le second ouvrage que je conseillerai de lire. Il faut compter une bonne journée de lecture.</p>

<h3>BiostatTGV</h3>

<p>Le <a href="http://marne.u707.jussieu.fr/biostatgv/">site Web <em>BiostatTGV</em></a> permet de réaliser facilement et gratuitement des test statistiques. Il est proporé par l'université Jussieu, Institut pierre Louis et par des membres du réseau Sentinelles. Il permet en particulier de <a href="http://marne.u707.jussieu.fr/biostatgv/?module=tests">choisir le bon test statistique</a> en fonction du type de variables que l'on souhaite étudier.</p>

<h3>Sites associatifs</h3>

<h4>CRAME Bordeaux</h4>

<p>&lt;www.crame.u-bordeaux2.fr/pdf/comment_faire_unethese.pdf></p>

<p>Un guide sur comment faire sa thèse. Le diagramme de Gantt est très intéressant.</p>

<h4>Université d'Angers</h4>

<p><a href="http://www.med.univ-angers.fr/fr/la-faculte/mg/theses/aides-methodologiques-pour-la-these.html">http://www.med.univ-angers.fr/fr/la-faculte/mg/theses/aides-methodologiques-pour-la-these.html</a></p>

<p>Propose un tutoriel Excel pour <a href="http://www.youtube.com/watch?v=5Z3Z2MzoKCo&amp;feature=c4-overview&amp;list=UUPA9nygJL0b1ukzidOwVtgQ">tableau croisé dynamique</a> en vidéo. Beaucoup de liens morts.</p>

<h4>Nice</h4>

<p><a href="http://nice.cnge.fr/rubrique.php3?id_rubrique=26">http://nice.cnge.fr/rubrique.php3?id_rubrique=26</a></p>

<p>Proposent en particulier un <a href="www.nice.cnge.fr/IMG/pdf/GMTQuali.pdf">guide méthodologique pour les thèses qualitatives</a></p>

<h4>SP Poitier</h4>

<p><a href="http://medphar.univ-poitiers.fr/santepub/aide-methodologique">http://medphar.univ-poitiers.fr/santepub/aide-methodologique</a> Propose des cours</p>

<p>Ont une "fiche de consultation"</p>

<h4>FAYR-GP</h4>

<p><a href="http://fayrgp.org/">http://fayrgp.org/</a></p>

<p>Semblent disposer de nombreuses ressources mais leur site est indisponible.</p>

<h4>AIMGER</h4>

<p><a href="http://www.aimger.com/index.php/theses/methodologie">http://www.aimger.com/index.php/theses/methodologie</a> L'Association des Internes de Médecine Générale de Rennes (AIMGER)</p>

<p>Propose un guide pratique, proche de celui d'Hervé Maisonneuve, avec des outils concret. Orienté MG, il semble très bien fait.</p>

<p>Un <a href="http://www.aimger.com/images/tutorielexcel.pdf">guide d'utilisation d'Excel est proposé en téléchargement</a>. Très concis, permet de répondre de faire déjà beaucoup d'analyses.</p>

<h4>DUSP ANGERS</h4>

<p>département de santé publique d'Angers: site qui permet d'avoir quelques astuces pour se servir d'Excel et Epiinfo.</p>

<p>Ils semblent proposer des ateliers pratiques en informatique.</p>

<h5>Autres</h5>

<p><a href="http://www.kb.u-psud.fr/medecine-generale/DES/Theses/Faculte/redaction.htm">http://www.kb.u-psud.fr/medecine-generale/DES/Theses/Faculte/redaction.htm</a></p>

<h2>Conclusion</h2>

<p>Il existe de nombreuses ressources pour apprendre à réaliser sa thèse d'exercice mais l'interne en médecine dispose de peu de temps pour les consulter et à tendance à se lancer dans son travail sans prendre le temps de comprendre l'ensemble du problème. La lecture du <a href="http://www.sanofi.fr/l/fr/fr/download.jsp?file=D7889C86-3DBB-42A9-8925-2C1325D946EB.pdf">Guide pratique du thésard</a> puis de l'<a href="http://www.sudoc.fr/155097342">initiation à la recherche</a> sont un investissement temporel qui me semblent rapidement rentable. L'apprentissage de l'utilisation de certains outils informatiques tels qu'un traitement de texte, un tableur et un logiciel de gestion de la bibliographie sont me paraissent également importants et feront l'objet éventuellement d'un autre article.</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>199</wp:post_id>
		<wp:post_date>2014-09-27 10:25:06</wp:post_date>
		<wp:post_date_gmt>2014-09-27 09:25:06</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>aide-methodologique-pour-la-these-en-medecine</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="consultation-methodologie"><![CDATA[Consultation en méthodologie]]></category>
		<category domain="post_tag" nicename="medecine"><![CDATA[médecine]]></category>
		<category domain="post_tag" nicename="these"><![CDATA[Thèse]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>VIM pour MacOS X</title>
		<link>http://jomuller.fr/?p=219</link>
		<pubDate>Sun, 05 Oct 2014 08:04:11 +0000</pubDate>
		<dc:creator><![CDATA[jomuller]]></dc:creator>
		<guid isPermaLink="false">http://jomuller.fr/?p=219</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://jomuller.fr/wp-content/uploads/2014/10/vim.png"><img src="http://jomuller.fr/wp-content/uploads/2014/10/vim.png" alt="vim" width="199" height="200" class="alignleft size-full wp-image-222" /></a></p>

<p>Mon activité actuelle me fait passer de plus en plus de temps dans un éditeur de texte. J'en ai un pour <a href="http://www.r-project.org/">R</a> (<a href="http://www.rstudio.com/products/RStudio/">Rstudio</a>), un autre pour éditer les documents <a href="http://daringfireball.net/projects/markdown/">MarkDown</a> (<a href="http://bywordapp.com/">ByWord</a>), les documents LaTeX (<a href="https://en.wikipedia.org/wiki/TeXstudio">TexStudio</a>) et encore un quatrième pour le reste (<a href="http://www.sublimetext.com/">Sublime Text</a>). Ce dernier commence à me servir de <em>couteau suisse</em> et à remplacer peu à peu les précédents, mais j'ai un frein à son utilisation : il n'est pas libre. Du coup, je ne sais pas comment il va évoluer dans le temps.</p>

<p>Je suis tombé la semaine dernière sur un libre "<a href="https://vimebook.com/">VIM pour les humains</a>" qui m'a donné envie de donner une seconde chance à cet éditeur de texte. Même si <a href="https://fr.wikipedia.org/wiki/Vi">vi</a> existe depuis plus de 40 ans et sa version améliorée, <a href="https://fr.wikipedia.org/wiki/Vim">vim</a>, depuis plus de 20 ans, ils semblent être encore taillés pour l'utilisation d'aujourd'hui et de demain. Je l'avais déjà essayé, mais laissé de côté, car trop aride. Avec ce livre, j'ai été convaincu de lui laisser une seconde chance.</p>

<p>Dans ce billet je décrirai <strong>les étapes pour avoir un VIM utilisable sur Mac OS X 10.9</strong>.</p>

<!--more-->

<h2>Installer MacVim</h2>

<p><a href="https://code.google.com/p/macvim/">MacVim</a> donne une interface graphique à VIM sur Mac, avec de nombreux menus bien pensés et des raccourcis adaptés Mac OS X.</p>

<p>La dernière version est <a href="https://github.com/b4winckler/macvim/releases">librement téléchargeable sur GitHub</a>. L'archive est au format <code>.tbz</code> (Bzip Compressed Tar Archive) reconnu nativement par l'Utilitaire d'Archive de Mac OS X. Ensuite, il suffit simplement de glisser MacVim dans le dossier Applications.</p>

<h2>Désactiver la palette de caractère lorsque touche enfoncée</h2>

<p>Depuis Mac OS X 10.7, lorsque l'on reste appuyé sur une touche une petite palette apparait pour proposer pour la touche en question tous les accents et formes spéciales du caractère disponible. Ce comportement est hérité d'iOS. Il est certainement très pratique pour des débutants, mais pénible pour un programmeur. En effet, impossible de rester appuyé sur une touche pour répéter un caractère.</p>

<p>Dans VIM, ceci est très pénible car on utiliser les touches de "hjkl" pour se déplacer. Pour <a href="http://www.defaults-write.com/disable-press-and-hold-option-in-mac-os-x-10-7/#.VDD5xuf2K00">désactiver ce comportement</a> de Mac OS X, il suffit d'ouvrir le terminal et de taper :</p>

<pre><code>defaults write -g ApplePressAndHoldEnabled -bool false
</code></pre>

<p>Puis redémarrer la machine.</p>

<h2>Fichier de configuration</h2>

<p>Rien de spécifique à Mac OS X pour l'instant. Je me suis pour l'instant contenté de suivre les propositions du livre <a href="https://vimebook.com/">VIM pour les humains</a>.</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>219</wp:post_id>
		<wp:post_date>2014-10-05 09:04:11</wp:post_date>
		<wp:post_date_gmt>2014-10-05 08:04:11</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>vim-pour-macos-x</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="mac-os"><![CDATA[Mac OS]]></category>
		<category domain="category" nicename="programmation"><![CDATA[Programmation]]></category>
		<category domain="category" nicename="vim"><![CDATA[Vim]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>vim-adventures : Utiliser le caractère ~ (tilde) sur Mac </title>
		<link>http://jomuller.fr/?p=229</link>
		<pubDate>Fri, 17 Oct 2014 09:33:56 +0000</pubDate>
		<dc:creator><![CDATA[jomuller]]></dc:creator>
		<guid isPermaLink="false">http://jomuller.fr/?p=229</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://jomuller.fr/wp-content/uploads/2014/10/vim_tilde.jpg"><img src="http://jomuller.fr/wp-content/uploads/2014/10/vim_tilde-300x217.jpg" alt="vim tilde" width="300" height="217" class="alignleft size-medium wp-image-230" /></a> Depuis un peu plus d'une semaine je me forme à Vim après l'avoir installé. J'ai trouvé un jeu qui permet de s'y entraîner sur internet de manière ludique : <a href="http://vim-adventures.com/">vim-adventures</a>.</p>

<p>Petit problème : au niveau 6, il faut utiliser le tilde (~) pour changer la case d'un charactère.</p>

<!--more-->

<p>Cette touche est accessible sur une clavier mac en Français par <alt-n> <space>. Mais ceci retourne un message d'erreur dans le jeu.</p>

<blockquote>
  <p>Caps Lock is on. Please turn it off to play. You can use shift to type upper-case letters</p>
</blockquote>

<p>Après quelques recherches, j'ai trouvé la solution : changer la méthode de saisie par "Britannique PC".</p>

<ul>
<li>Aller dans les <em>préférences</em>, <em>clavier</em> onglet <em>Méthodes de saisie</em></li>
<li>Cliquer sur le "+" et ajouter "Britannique - PC"</li>
<li>Cocher "Afficher le mene Saisie dans la barre des menus"</li>
<li>Sélectionner cette méthode de saisie</li>
<li>Pour faire le tilde, presser &lt;Shift-"#">, "#" étant la touche "`" sur un clavier français</li>
</ul>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>229</wp:post_id>
		<wp:post_date>2014-10-17 10:33:56</wp:post_date>
		<wp:post_date_gmt>2014-10-17 09:33:56</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>vim-adventures-utiliser-le-caractere-tilde-sur-mac</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="programmation"><![CDATA[Programmation]]></category>
		<category domain="category" nicename="vim"><![CDATA[Vim]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Cahier des charges pour VIM</title>
		<link>http://jomuller.fr/?p=237</link>
		<pubDate>Thu, 30 Oct 2014 08:22:38 +0000</pubDate>
		<dc:creator><![CDATA[jomuller]]></dc:creator>
		<guid isPermaLink="false">http://jomuller.fr/?p=237</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Depuis 3 semaines je tente d'utiliser de plus en plus VIM afin d'améliorer ma productivité. Après avoir suivi quelques formations, je commence à être relativement convaincu. Cependant le logiciel a besoin de beaucoup d'adaptations pour retrouver les mêmes fonctionnalités que je connais avec ByWord pour le Markdown, RStudio pour le R et Sublime Text pour le reste. Dans ce billet je vais décrire le cahier des charges pour que VIM deviennent pour moi un outil performant. Dans de prochains billets je décrirait les solutions que j'ai trouvées pour répondre à ce cahier des charges fonctionnel.</p>

<!--more-->

<h2>Gestion des extension</h2>

<p>Les extensions donnent beaucoup de capacité d'adaptation à VIM. Cependant leur gestion n'est pas simple, que ce soit leur installation ou leur mise à jour. J'aimerai donc trouver un système de gestion des extension de VIM qui soit à peu près au niveau de celui de Sublime Text, qui est excellent.</p>

<p>Fonctionnalité attendues :</p>

<ul>
<li>Installation à partir du logiciel</li>
<li>Mise à jour simple</li>
<li>Désinstallation simple</li>
<li>Aide à l'a configuration</li>
<li>Possibilité de désactiver une extension</li>
<li>Système pour naviguer dans les extensions installées</li>
</ul>

<h2>Gestionnaire de fichier</h2>

<ul>
<li>Naviguer dans une arboresence</li>
<li>Fuzzy Finder</li>
<li>Modification (chercher et remplacer) dans tous les fichiers d'une arboresence.</li>
</ul>

<h2>Markdown</h2>

<p>Se rapprocher de ByWord</p>

<ul>
<li>Coloration adaptée</li>
<li>Police agréable</li>
<li>Auto-indentation</li>
<li>Bonne césure des mots</li>
<li>Correcteur orthographique basique</li>
</ul>

<h2>R</h2>

<ul>
<li>Coloration syntaxique</li>
<li>Autocomplétion avec introspection du code</li>
<li>Accès rapide à l'aide</li>
<li>Système équivalent au <em>RProject</em> de <em>RStudio</em></li>
<li>Auto-indentation</li>
<li>Bonne gestion de RMarkdown</li>
</ul>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>237</wp:post_id>
		<wp:post_date>2014-10-30 09:22:38</wp:post_date>
		<wp:post_date_gmt>2014-10-30 08:22:38</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>cahier-des-charges-pour-vim</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="r"><![CDATA[GNU R]]></category>
		<category domain="category" nicename="programmation"><![CDATA[Programmation]]></category>
		<category domain="category" nicename="vim"><![CDATA[Vim]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Gestionnaire d&#039;extension pour VIM</title>
		<link>http://jomuller.fr/?p=247</link>
		<pubDate>Sat, 01 Nov 2014 13:36:04 +0000</pubDate>
		<dc:creator><![CDATA[jomuller]]></dc:creator>
		<guid isPermaLink="false">http://jomuller.fr/?p=247</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>Objectif</h2>

<p>Trouver un gestionnaire d'extensions de VIM avec des fonctionnalités proches de celui de Sublime Text</p>

<!--more-->

<h2>Fonctionnalités attendues</h2>

<ul>
<li>Installation rapide d'un plugin</li>
<li>Mise à jour automatique</li>
<li>Désinstallation rapide</li>
<li>Gestion de dépendances</li>
<li>Éventuellement, possibilité d'activer ou désactiver facilement un plugin</li>
</ul>

<h2>Résultats</h2>

<h3>Pathogen</h3>

<p><a href="https://github.com/tpope/vim-pathogen">https://github.com/tpope/vim-pathogen</a></p>

<p><em>Pathogen</em> est celui que j'ai installé lors de mon initiation à VIM avec le livre <a href="https://vimebook.com/">Vim pour les humains</a>. Il ne sert à priori qu'à gérer le fait que chaque plugin est dans un répertoire séparé, ce qui facilite leur gestion. Cependant il ne répond pas l'ensemble du cahier des charges.</p>

<p><a href="http://stackoverflow.com/questions/2458398/packageplugin-management-for-vim">Certains indiquent</a> que <em>Pathogen</em> a comme avantage de garder le contrôle sur ce que l'on installe, sans être lié à des services dont on ne connais pas la fiabilité.</p>

<h3>Vundle</h3>

<p><a href="https://github.com/gmarik/Vundle.vim">https://github.com/gmarik/Vundle.vim</a></p>

<p>Il permet de :</p>

<ul>
<li>Suivre et configurer les plugins directement dans le fichier <code>.vimrc</code></li>
<li>Installer des plugins</li>
<li>Mettre à jour des plugins</li>
<li>Chercher par nom tous les scripts Vim disponibles</li>
<li>Nettoyer les plugin non utilisés</li>
<li>Réaliser l'ensemble de ces actions avec une seule touche à l'aide du mode interactif</li>
</ul>

<p>Om semble être donc un très bon candidat. Cependant, le créateur de <em>Vundle</em>, ,<a href="http://gmarik.info/blog/2014/02/04/why-i-stopped-contributing-to-vundle">semble avoir laissé tombé son développement</a>. En cause : l'absence de soutient financier, manque de temps et l'arrivée d'un fork, <a href="https://github.com/Shougo/neobundle.vim">neobundle</a>, un peu trop semblable à son goût.</p>

<p>Ceci dit, sur la page de <em>neobundle</em>, ils conseillent l'utilisation de <em>Vundle</em> pour les débutant comme moi, donc il reste un très bon candidat.</p>

<h3>Neobundle</h3>

<p><a href="https://github.com/Shougo/neobundle.vim">https://github.com/Shougo/neobundle.vim</a></p>

<p>Fork de <em>Vundle</em> qui se veut plus complexe, donc peut être loin de l'aspect KISS. Il est indiqué comme étant en développement actif, instable. Donc pour l'instant je ne le testerait pas.</p>

<h2>Conclusion</h2>

<p>J'ai finalement choisi de continuer à utiliser <em>Pathogen</em> car :</p>

<ul>
<li>Je l'ai déjà installé et je n'ai pas envie de risquer de tout devoir réinstaller en utilisant un nouveau gestionnaire de paquet</li>
<li>Car il ne télécharge pas automatiquement les mises à jours et les plugin. Pour l'instant, j'en utilise assez peu et je préfère garder un minimum de contrôle sur ce qu'il se passe</li>
<li>Car le projet semble encore maintenu, contrairement un Vundle qui semble péricliter</li>
<li>Car il est stable contrairement à Neobundle</li>
</ul>

<p>Je ne répond pas à l'objectif mais ma recherche m'a fait revoir mes besoin!</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>247</wp:post_id>
		<wp:post_date>2014-11-01 14:36:04</wp:post_date>
		<wp:post_date_gmt>2014-11-01 13:36:04</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>gestionnaire-dextension-pour-vim</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="vim"><![CDATA[Vim]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Représenter un nuage de points ayant beaucoup de superposition</title>
		<link>http://jomuller.fr/?p=268</link>
		<pubDate>Fri, 14 Nov 2014 09:47:37 +0000</pubDate>
		<dc:creator><![CDATA[jomuller]]></dc:creator>
		<guid isPermaLink="false">http://jomuller.fr/?p=268</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://www.sumsar.net/blog/2014/11/how-to-summarize-a-2d-posterior-using-a-highest-density-ellipse/">How to Summarize a 2D Posterior Using a Highest Density Ellipse - Publishable Stuff - Rasmus Bååth's Research Blog</a></p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>268</wp:post_id>
		<wp:post_date>2014-11-14 10:47:37</wp:post_date>
		<wp:post_date_gmt>2014-11-14 09:47:37</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>test</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="a-lire"><![CDATA[A lire]]></category>
		<category domain="category" nicename="r"><![CDATA[GNU R]]></category>
		<category domain="post_tag" nicename="graphiques"><![CDATA[graphiques]]></category>
		<category domain="category" nicename="graphiques-2"><![CDATA[Graphiques]]></category>
		<category domain="post_format" nicename="post-format-link"><![CDATA[Lien]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>EARL 2015</title>
		<link>http://jomuller.fr/?p=274</link>
		<pubDate>Fri, 14 Nov 2014 12:23:17 +0000</pubDate>
		<dc:creator><![CDATA[jomuller]]></dc:creator>
		<guid isPermaLink="false">http://jomuller.fr/?p=274</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://www.earl-conference.com/">Effective Application of R Language - Londres - 14, 15 et 16 septembre 2015</a></p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>274</wp:post_id>
		<wp:post_date>2014-11-14 13:23:17</wp:post_date>
		<wp:post_date_gmt>2014-11-14 12:23:17</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>earl-2015</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="r"><![CDATA[GNU R]]></category>
		<category domain="post_format" nicename="post-format-link"><![CDATA[Lien]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Plannifier la production de tableaux de bords avec R</title>
		<link>http://jomuller.fr/?p=285</link>
		<pubDate>Mon, 24 Nov 2014 08:32:29 +0000</pubDate>
		<dc:creator><![CDATA[jomuller]]></dc:creator>
		<guid isPermaLink="false">http://jomuller.fr/?p=285</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Voir le projet <a href="https://github.com/Bart6114/scheduleR/">scheduleR</a></p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>285</wp:post_id>
		<wp:post_date>2014-11-24 09:32:29</wp:post_date>
		<wp:post_date_gmt>2014-11-24 08:32:29</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>plannifier-la-production-de-tableaux-de-bords-avec-r</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="r"><![CDATA[GNU R]]></category>
		<category domain="post_format" nicename="post-format-link"><![CDATA[Lien]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Choisir et définir son dépot CRAN</title>
		<link>http://jomuller.fr/?p=289</link>
		<pubDate>Thu, 27 Nov 2014 18:19:46 +0000</pubDate>
		<dc:creator><![CDATA[jomuller]]></dc:creator>
		<guid isPermaLink="false">http://jomuller.fr/?p=289</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://jomuller.fr/wp-content/uploads/2014/11/Rlogo.jpg"><img src="http://jomuller.fr/wp-content/uploads/2014/11/Rlogo.jpg" alt="Rlogo" width="100" height="76" class="alignleft size-full wp-image-294" /></a> L'une des forces de <a href="r-project.org">R</a> est son système de packages. Pour pouvoir télécharger ces packages, il faut au préalable définir un dépôt. Le réseau de dépôt le plus connu est le <a href="http://cran.r-project.org/">CRAN</a>. Il en existe d'autres (par exemple <a href="http://www.bioconductor.org/]">Bioconductor</a> dont je ne parlerai pas ici.</p>

<p>Je décrirais dans ce billet comment choisir et définir à la main son dépôt CRAN.</p>

<!--more-->

<h2>Choix du dépôt</h2>

<p>Le <em>Comprehensive R Archive Network</em> (CRAN) est un réseau de serveurs (<a href="https://fr.wikipedia.org/wiki/File_Transfer_Protocol">FTP</a> et <a href="https://fr.wikipedia.org/wiki/Hypertext_Transfer_Protocol">HTTP</a>) répartis dans le monde qui stockent des versions identiques et à jour de <em>R</em> et de ses <em>packages</em>.</p>

<p>Il est indiqué d'utiliser le miroir le plus proche afin de minimiser la charge réseau. Pour ce faire</p>

<ol>
<li>Se rendre sur la page listant les dépôts : <a href="http://cran.r-project.org/mirrors.html">http://cran.r-project.org/mirrors.html</a> </li>
<li>Trouver le pays où vous êtes actuellement localisé. Pour les frontaliers, peut-être voir avec les pays voisins.</li>
<li>Trouver le serveur le plus proche et sélectionner son URL</li>
</ol>

<p>Dans mon cas il y a deux candidats, CARDSE qui est à Strasbourg et Paris I.</p>

<p>Etapes optionnelle et certainement optionnelle : tester les serveurs, par exemple simplement sur leur <a href="https://fr.wikipedia.org/wiki/Ping_%28logiciel%29">ping</a> qui permet de connaître le temps de latence du serveur :</p>

<pre><code>ping -c 5 cran.cardse.net
ping -c 5 cran.univ-paris1.fr
</code></pre>

<p>Pour tester le débit, on peut télécharger un gros package et observer le débit moyen.</p>

<pre><code>wget http://cran.cardse.net/src/contrib/ggplot2_1.0.0.tar.gz 
wget http://cran.univ-paris1.fr/src/contrib/ggplot2_1.0.0.tar.gz 
rm ggplot2_1.0.0.tar.gz*
</code></pre>

<p>Dans mon cas c'est <code>http://cran.cardse.net</code> le candidat idéal.</p>

<h2>Définir le dépôt</h2>

<p>Il est possible de définir le dépôt à l'aide du GUI de R. Autre possibilité pour ceux qui n'utilisent pas le GUI : le configurer dans le fichier <code>~/.Rprofile</code>.</p>

<p>Pour ouvrir ce fichier, taper dans le terminal</p>

<pre><code>vim ~/.Rprofile
</code></pre>

<p>Puis ajouter</p>

<pre><code># Set the repositories

local({r &lt;-getOption("repos")
       r["CRAN"] &lt;- "http://cran.cardse.net/"
       options(repos = r)
 })
</code></pre>

<p>en remplaçant <code>http://cran.cardse.net/</code> par l'URL du dépot que vous avez sélectionné.</p>

<p>Enfin, enregistrez le tout et testez en lançant R.</p>

<pre><code>install.packages("dfexplore")
</code></pre>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>289</wp:post_id>
		<wp:post_date>2014-11-27 19:19:46</wp:post_date>
		<wp:post_date_gmt>2014-11-27 18:19:46</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>choisir-et-definir-son-depot-cran</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="r"><![CDATA[GNU R]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Encodage de caractères avec VIM</title>
		<link>http://jomuller.fr/?p=305</link>
		<pubDate>Thu, 04 Dec 2014 13:48:18 +0000</pubDate>
		<dc:creator><![CDATA[jomuller]]></dc:creator>
		<guid isPermaLink="false">http://jomuller.fr/?p=305</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://spin.atomicobject.com/2011/06/21/character-encoding-tricks-for-vim/">http://spin.atomicobject.com/2011/06/21/character-encoding-tricks-for-vim/</a></p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>305</wp:post_id>
		<wp:post_date>2014-12-04 14:48:18</wp:post_date>
		<wp:post_date_gmt>2014-12-04 13:48:18</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>encodage-de-caracteres-avec-vim</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="encodage-de-caracteres"><![CDATA[encodage de caractères]]></category>
		<category domain="post_format" nicename="post-format-link"><![CDATA[Lien]]></category>
		<category domain="category" nicename="vim"><![CDATA[Vim]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Installer openXLSX sous Windows</title>
		<link>http://jomuller.fr/?p=308</link>
		<pubDate>Fri, 05 Dec 2014 09:49:47 +0000</pubDate>
		<dc:creator><![CDATA[jomuller]]></dc:creator>
		<guid isPermaLink="false">http://jomuller.fr/?p=308</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>Contexte</h2>

<p>Le package <a href="cran.r-project.org/web/packages/openxlsx/index.html">openxlsx</a> est actuellement la solution la plus élégante pour travailler directement sur des fichiers au <a href="fr.wikipedia.org/wiki/Office_Open_XML">format XLSX</a> dans <a href="r-project.org">R</a>. Son principal avantage face aux autres solutions (xlsx ou XLConnect) est de s'affranchir des dépendances Java.</p>

<p>Ce billet traitera de l'installation de ce package, en particulier sous Windows.</p>

<!--more-->

<h2>Installation</h2>

<p>L'installation du package peut se faire de manière traditionnelle dans R avec :</p>

<pre><code>install.packages("openxlsx")
</code></pre>

<h2>Pour Windows</h2>

<p>Pour Windows, une étape supplémentaire est nécessaire : l'installation des RTools. Pour se faire il suffit de :</p>

<ol>
<li>Télécharger la <a href="http://cran.r-project.org/bin/windows/Rtools/">bonne version des RTools sur la page du CRAN</a>.</li>
<li>Lancer l'installateur (et donc avoir les droits administrateur sur sa machine)</li>
<li>Si l'installation semble problématique, voir <a href="https://github.com/stan-dev/rstan/wiki/Install-Rtools-for-Windows">ce tutoriel</a>.</li>
</ol>

<p>Autre possiblité, directement dans R :</p>

<pre><code>installr::install.rtools()
</code></pre>

<p>Pourquoi cette étape supplémentaire? Car <em>openxlsx</em> a besoin d'un logiciel pour <a href="https://fr.wikipedia.org/wiki/Office_Open_XML#Le_paquet">dézipper les fichiers XLSX</a>, qui sont en effet que des <a href="fr.wikipedia.org/wiki/ZIP_%28format_de_fichier%29">archives ZIP</a> contenants plusieurs fichiers XML. Ce logiciel est déjà installé par défaut sur MacOS et Linux, mais pas sous Windows.</p>

<h2>Conclusion</h2>

<p>Le format XLSX est largement répandu dans le monde du travail. C'est un progrès par rapport au format XLS mais ce format pose encore de nombreux problèmes. Cependant dans R c'est acutellement le format de fichier de tableur qui me semble le mieux géré. Il serait bon qu'il existe un package équivalent pour les fichiers <a href="https://fr.wikipedia.org/wiki/OpenDocument">ODS</a>. Des projets sont en cours mais rien de convaincant pour l'instant.</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>308</wp:post_id>
		<wp:post_date>2014-12-05 10:49:47</wp:post_date>
		<wp:post_date_gmt>2014-12-05 09:49:47</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>installer-openxlsx-sous-windows</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="r"><![CDATA[GNU R]]></category>
		<category domain="category" nicename="package-r"><![CDATA[Package R]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Créer une clef USB pour installer OSX Yosemite</title>
		<link>http://jomuller.fr/?p=315</link>
		<pubDate>Sat, 13 Dec 2014 12:08:16 +0000</pubDate>
		<dc:creator><![CDATA[jomuller]]></dc:creator>
		<guid isPermaLink="false">http://jomuller.fr/?p=315</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://jomuller.fr/wp-content/uploads/2014/12/Osx-yosemite-logo.png"><img src="http://jomuller.fr/wp-content/uploads/2014/12/Osx-yosemite-logo-150x150.png" alt="Osx-yosemite-logo" width="150" height="150" class="alignleft size-thumbnail wp-image-324" /></a> Depuis la disparition des lecteurs DVD sur mac, une réinstallation complète du système impose d'utiliser un disque externe. Je vais décrire ici rapidement comment créer une clef USB pour installer OSX Yosemite (10.10).</p>

<!--more-->

<h2>Matériel nécessaire</h2>

<ul>
<li>Un Mac ayant accès à l'App Store</li>
<li>Une bonne connexion à internet</li>
<li>Une clef USB de plus de 8Go</li>
</ul>

<h2>Etapes</h2>

<h3>Téléchager OSX Yosemite</h3>

<p>Depuis l'App Store, télécharger gratuitement OSX Yosemite (5,17Go)</p>

<p><a href="http://jomuller.fr/wp-content/uploads/2014/12/dl_yosemite.jpg"><img src="http://jomuller.fr/wp-content/uploads/2014/12/dl_yosemite-300x13.jpg" alt="dl_yosemite" width="300" height="13" class="aligncenter size-medium wp-image-317" /></a></p>

<h3>Préparer la clef USB</h3>

<p>Initialiser la clef USB de plus de 8 Go en Mac OS X étendu journalisé à l'aide de l'Utilitaire de disque et nommer cette clef <em>Untitled</em>.</p>

<p><a href="http://jomuller.fr/wp-content/uploads/2014/12/utilitaire_disque.jpg"><img src="http://jomuller.fr/wp-content/uploads/2014/12/utilitaire_disque-300x239.jpg" alt="utilitaire_disque" width="300" height="239" class="aligncenter size-medium wp-image-316" /></a></p>

<h3>Installer OSX sur la clef</h3>

<p>Dans le terminal lancer la commande</p>

<pre><code> sudo /Applications/Install\ OS\ X\ Yosemite.app/Contents/Resources/createinstallmedia --volume /Volumes/Untitled --applicationpath /Applications/Install\ OS\ X\ Yosemite.app --nointeraction
</code></pre>

<p>L'opération est longue et il n'y a pas de barre d'avancée. Si vous souhaitez avoir une idée de l'avancée, vous pouvez ouvrir le <em>moniteur d'activité</em>, onglet <em>Disque</em> et suivre l'opération <em>createinstallmedia</em>. Il est censé "graver" environ 5Go sur la clef.</p>

<p><a href="http://jomuller.fr/wp-content/uploads/2014/12/suivi1.png"><img src="http://jomuller.fr/wp-content/uploads/2014/12/suivi1-300x193.png" alt="suivi" width="300" height="193" class="aligncenter size-medium wp-image-329" /></a></p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>315</wp:post_id>
		<wp:post_date>2014-12-13 13:08:16</wp:post_date>
		<wp:post_date_gmt>2014-12-13 12:08:16</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>creer-une-clef-usb-pour-installer-osx-yosemite</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="administration-systeme"><![CDATA[Administration système]]></category>
		<category domain="post_tag" nicename="clef-usb"><![CDATA[Clef USB]]></category>
		<category domain="post_tag" nicename="installation"><![CDATA[Installation]]></category>
		<category domain="category" nicename="mac-os"><![CDATA[Mac OS]]></category>
		<category domain="post_tag" nicename="yosemite"><![CDATA[Yosemite]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Snippet dans Vim</title>
		<link>http://jomuller.fr/?p=331</link>
		<pubDate>Mon, 15 Dec 2014 07:36:46 +0000</pubDate>
		<dc:creator><![CDATA[jomuller]]></dc:creator>
		<guid isPermaLink="false">http://jomuller.fr/?p=331</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="https://github.com/SirVer/ultisnips">https://github.com/SirVer/ultisnips</a></p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>331</wp:post_id>
		<wp:post_date>2014-12-15 08:36:46</wp:post_date>
		<wp:post_date_gmt>2014-12-15 07:36:46</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>snippet-dans-vim</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_format" nicename="post-format-link"><![CDATA[Lien]]></category>
		<category domain="category" nicename="programmation"><![CDATA[Programmation]]></category>
		<category domain="category" nicename="vim"><![CDATA[Vim]]></category>
	</item>
	<item>
		<title>Screencast pour Vim</title>
		<link>http://jomuller.fr/?p=338</link>
		<pubDate>Tue, 16 Dec 2014 21:43:42 +0000</pubDate>
		<dc:creator><![CDATA[jomuller]]></dc:creator>
		<guid isPermaLink="false">http://jomuller.fr/?p=338</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://vimcasts.org/">http://vimcasts.org/</a></p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>338</wp:post_id>
		<wp:post_date>2014-12-16 22:43:42</wp:post_date>
		<wp:post_date_gmt>2014-12-16 21:43:42</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>screencast-pour-vim</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_format" nicename="post-format-link"><![CDATA[Lien]]></category>
		<category domain="category" nicename="vim"><![CDATA[Vim]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bilan après 2 mois d&#039;utilisation de VIM et R</title>
		<link>http://jomuller.fr/?p=340</link>
		<pubDate>Sat, 20 Dec 2014 11:29:29 +0000</pubDate>
		<dc:creator><![CDATA[jomuller]]></dc:creator>
		<guid isPermaLink="false">http://jomuller.fr/?p=340</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://jomuller.fr/wp-content/uploads/2014/12/de-rstudio-a-vim.jpg"><img src="http://jomuller.fr/wp-content/uploads/2014/12/de-rstudio-a-vim.jpg" alt="de rstudio a vim" width="125" height="222" class="alignleft size-full wp-image-352" /></a> Cela fait un peu <a href="http://jomuller.fr/?p=219">plus de deux mois</a> que je tente d'utiliser Vim comme mon éditeur de texte principal. Je l'utilise désormais quotidiennement pour éditer mes fichiers en R, Markdown et Python.</p>

<p>Dans ce billet, je vais décrire mon chemin vers un environnement de travail avec Vim et R.</p>

<!--more-->

<h2>Il y a deux ans...</h2>

<p>J'utilise R depuis plus de 2 ans maintenant. J'ai débuté en utilisant simplement le GUI fourni avec <a href="http://cran.r-project.org/bin/macosx/">R pour Mac OS X</a> qui est assez basique, mais contient les fonctions principales : un éditeur de texte qui est lié avec une instance de R tournant dans une console dédiée et une fenêtre pour les sorties graphiques. La documentation est facilement accessible avec un navigateur intégré.</p>

<p><a href="http://jomuller.fr/wp-content/uploads/2014/12/Rgui.png"><img src="http://jomuller.fr/wp-content/uploads/2014/12/Rgui-300x166.png" alt="Rgui" width="300" height="166" class="aligncenter size-medium wp-image-343" /></a></p>

<p>J'étais cependant frustré par l'éditeur de texte : la coloration syntaxique est minimaliste, il n'y a pas d'autocompletion, les outils de recherches et remplacement sont simples, mais très limités. Bref, c'est propre, mais trop limité à l'usage et il n'y a pas (à ma connaissance) d'extension possible.</p>

<p>Je codais en parallèle des projets en Python et en C++ en utilisant <a href="http://www.eclipse.org/">Eclipse IDE</a> et j'avais pris gout à toutes les aides disponibles dans ces IDE qui me permettaient d'augmenter ma productivité. J'ai tenté d'utiliser R avec Eclipse mais sans que le résultat soit probant. De plus, je trouvais Eclipse très lourd et souvent pour de petites corrections je me contentais d'éditer mon code dans un petit éditeur de texte.</p>

<h2>...arrive RStudio</h2>

<p><a href="http://www.rstudio.com/products/RStudio/">RStudio</a> m'a permis de vraiment programmer avec R et ne plus me contenter d'écrire de petits scripts sans cohérence. Il permet d'avoir un environnement parfaitement adapté à R dès l'installation. Tout (ou presque) y est : coloration syntaxique, autocomplétion avec aide intégrée, explorateur d'environnement... et en plus, intégration à GIT, tout un système pour faciliter la création de packages, le magnifique principe des projets (<code>.Rproj</code>) qui évitent de devoir faire des <code>setwd()</code> à chaque fois que l'on reprend son travail et de retrouver son environement lors de la dernière session.</p>

<p><a href="http://jomuller.fr/wp-content/uploads/2014/12/rstudio.png"><img src="http://jomuller.fr/wp-content/uploads/2014/12/rstudio-300x220.png" alt="rstudio" width="300" height="220" class="aligncenter size-medium wp-image-344" /></a></p>

<p>Mais mon niveau en programmation augmentait en parallèle avec mes exigences vis-à-vis de mes outils. Et je me suis retrouvé à l'étroit avec RStudio. Impossible de mettre deux pages de codes l'une à côté de l'autre, ma coloration syntaxique imparfaite, pas de <em>snippet</em> personnalisable, un système assez lourd surtout pour éditer de petits fichiers.</p>

<p>Et surtout, lorsque je devais éditer de petits bouts de codes d'un autre langage (Python, C++, Bash, un Makefile) il fallait relancer un autre éditeur.</p>

<p>Je me suis donc mis en quête d'un éditeur de texte unique. Pendant un moment Sublime Text était un bon candidat, jusqu'à ce que je me décide de me lancer avec VIM.</p>

<h2>... pour en arriver à VIM</h2>

<p>Aujourd'hui j'utilise presque exclusivement VIM pour l'ensemble de mes projets. Il m'a fallu deux mois pour m'y habituer et retrouver à peu près la même productivité que celle que j'avais avant. Mais j'y ai gagné en flexibilité, j'ai un éditeur de texte pour tous les fichiers que je traite et je n'utilise presque plus ma souris.</p>

<p>Une session de R ressemble désormais à ce que l'on voit sur l'image suivante :</p>

<p>[caption id="attachment_350" align="aligncenter" width="604"]
[<img src="http://jomuller.fr/wp-content/uploads/2014/12/vim_vartors-1024x640.jpg" alt="Vim et R" width="604" height="378" class="size-large wp-image-350" />]<a href="http://jomuller.fr/wp-content/uploads/2014/12/vim_vartors.jpg">8</a> Session de travail avec Vim et R. La sortie graphique (X11) est sur un autre écran.[/caption]</p>

<p>Ce fut assez difficile à mettre en place, mais j'ai désormais énormément gagné en flexibilité. Tout passe par le trio <a href="http://iterm2.com/">iTerm</a> + <a href="http://tmux.sourceforge.net/">Tmux</a> + Vim. Je peux dimensionner les fenêtres comme je le souhaite, en avoir autant que nécessaire, disposer de tous les outils en ligne de commande sous les doigts. Je ne passe plus mon temps à faire des copier-collé et à tenter de cliquer partout. Je peux passer plusieurs heures de suites sur un projet sans lâcher mon clavier et ne jamais toucher ma souris.</p>

<p>De plus j'ai vraiment l'impression de maîtriser mon outil.</p>

<p>Autre avantage : je peux enfin travailler sur mon 11 pouces en adaptant en permanence la configuration des fenêtres, comme le montre l'image suivante.</p>

<p>[caption id="attachment_376" align="aligncenter" width="300"][<img src="http://jomuller.fr/wp-content/uploads/2014/12/vim11pouces-300x169.jpg" alt="Vim + R + Git + Tmux sur un 11 pouces" width="300" height="169" class="size-medium wp-image-376" />]<a href="http://jomuller.fr/wp-content/uploads/2014/12/vim11pouces.jpg">11</a> Vim + R + Git + Tmux sur un 11 pouces[/caption] J'ai découvert des outils fantastiques comme les <em>fuzzy finders</em> ou les <em>snippets</em> personnalisables.</p>

<h2>Conclusion</h2>

<p>Je suis désormais suffisamment convaincu par cette approche pour continuer à l'utiliser. Pour l'instant, après deux mois de pratique, je suis juste arrivé à mon avis à mon niveau de productivité initial, mais je ne sais que j'ai une nouvelle marge d'évolution possible alors qu'avant je plafonnais.</p>

<p>Je prévois de décrire dans un prochain billet comment fonctionne mon cet environnement de travail actuellement et dans un autre comment l'installer.</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>340</wp:post_id>
		<wp:post_date>2014-12-20 12:29:29</wp:post_date>
		<wp:post_date_gmt>2014-12-20 11:29:29</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>bilan-apres-2-mois-dutilisation-de-vim-et-r</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="r"><![CDATA[GNU R]]></category>
		<category domain="category" nicename="programmation"><![CDATA[Programmation]]></category>
		<category domain="category" nicename="vim"><![CDATA[Vim]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Transformer &quot;verrouillage majuscule&quot; en touche &quot;Controle&quot; sur Mac OS</title>
		<link>http://jomuller.fr/?p=360</link>
		<pubDate>Sun, 21 Dec 2014 13:18:08 +0000</pubDate>
		<dc:creator><![CDATA[jomuller]]></dc:creator>
		<guid isPermaLink="false">http://jomuller.fr/?p=360</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://jomuller.fr/wp-content/uploads/2014/12/AppleCapsLock.jpg"><img src="http://jomuller.fr/wp-content/uploads/2014/12/AppleCapsLock-150x150.jpg" alt="AppleCapsLock" width="150" height="150" class="alignleft size-thumbnail wp-image-383" /></a>J'utilise beaucoup la touche <kbd>ctrl</kbd>, en particulier depuis que j'utilise intensivement <a href="http://tmux.sourceforge.net/">tmux</a> et <a href="http://www.vim.org/">vim</a>. Cependant cette touche est mal placée et oblige mon auriculaire à des contorsions tout le long de la journée.</p>

<!--more-->

<p>Il y a juste à coté de la ligne de repos de mon auriculaire gauche une touche que je n'utilise absolument jamais : <kbd>Cap lock</kbd> ou touche de verrouillage majuscule.</p>

<p>Pour configurer <kbd>Cap lock</kbd> comme touche <kbd>ctrl</kbd>, il suffit d'aller dans :</p>

<p><em>Préférences système</em> -> <em>Clavier</em> -> Onglet <em>Clavier</em> -> Bouton <em>Touches de modification...</em></p>

<p>et changer le comportement de <em>Touche de verr. majuscule</em></p>

<p><a href="http://jomuller.fr/wp-content/uploads/2014/12/caplockmac.png"><img src="http://jomuller.fr/wp-content/uploads/2014/12/caplockmac-300x221.png" alt="Changer caplock en ctrl" width="300" height="221" class="size-medium wp-image-364" /></a></p>

<p>Cette idée vient de la lecture du chapitre 2 de <a href="https://pragprog.com/book/bhtmux/tmux"><em>tmux: Productive Mouse-Free Development</em> écrit par <em>Brian P. Hogan</em></a>.</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>360</wp:post_id>
		<wp:post_date>2014-12-21 14:18:08</wp:post_date>
		<wp:post_date_gmt>2014-12-21 13:18:08</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>utiliser-la-touche-de-verrouillage-majuscule-comme-touche-controle-sur-mac</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="mac-os"><![CDATA[Mac OS]]></category>
		<category domain="category" nicename="programmation"><![CDATA[Programmation]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Fuzzy file finder : ctrl-p</title>
		<link>http://jomuller.fr/?p=381</link>
		<pubDate>Fri, 02 Jan 2015 14:06:00 +0000</pubDate>
		<dc:creator><![CDATA[jomuller]]></dc:creator>
		<guid isPermaLink="false">http://jomuller.fr/?p=381</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://kien.github.io/ctrlp.vim/">http://kien.github.io/ctrlp.vim/</a></p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>381</wp:post_id>
		<wp:post_date>2015-01-02 15:06:00</wp:post_date>
		<wp:post_date_gmt>2015-01-02 14:06:00</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>fuzzy-file-finder-ctrl-p</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_format" nicename="post-format-link"><![CDATA[Lien]]></category>
		<category domain="category" nicename="vim"><![CDATA[Vim]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Copier une sélection avec iTerm + Tmux</title>
		<link>http://jomuller.fr/?p=387</link>
		<pubDate>Tue, 06 Jan 2015 11:11:17 +0000</pubDate>
		<dc:creator><![CDATA[jomuller]]></dc:creator>
		<guid isPermaLink="false">http://jomuller.fr/?p=387</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://jomuller.fr/wp-content/uploads/2015/01/iterm21.png"><img src="http://jomuller.fr/wp-content/uploads/2015/01/iterm21.png" alt="iterm2" width="122" height="105" class="alignleft size-full wp-image-391" /></a> J'utilise quotidiennement <a href="http://iterm2.com/">iTerm2</a> et <a href="http://tmux.sourceforge.net/">tmux</a>. <strong>Copier-Coller</strong> n'est pas aussi simple que d'habitude avec cette configuration. Par exemple avec une console de <a href="http://www.r-project.org/">R</a> ouverte, <strong>impossible de sélectionner un texte simplement avec la souris</strong>, car le curseur est automatiquement remis au niveau de la zone de saisie.</p>

<p>iTerm2 permet de sélectionner pour copier du texte en utilisant la touche <kbd>alt</kbd> + sélection à la souris.</p>

<!--more-->

<p>Le problème de cette solution est quelle sélectionne toute la ligne. Lorsque l'on a un écran divisé verticalement comme dans l'image ci dessous, on copie à la fois ce qu'il a sur le panneau de gauche et celui de droite.</p>

<p><a href="http://jomuller.fr/wp-content/uploads/2015/01/vimr_copie.png"><img src="http://jomuller.fr/wp-content/uploads/2015/01/vimr_copie-300x227.png" alt="vimr_copie" width="300" height="227" class="aligncenter size-medium wp-image-388" /></a></p>

<p>Il est alors possible de faire des sélection d'un rectangle avec la combinaison <kbd>alt</kbd> + <kbd>cmd</kbd> + sélection à la souris.</p>

<p>Solution trouvée sur <a href="http://stackoverflow.com/questions/12287432/how-to-copy-to-system-clipboard-from-tmux-output-after-mouse-selection">StackOverflow</a>.</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>387</wp:post_id>
		<wp:post_date>2015-01-06 12:11:17</wp:post_date>
		<wp:post_date_gmt>2015-01-06 11:11:17</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>copier-une-selection-avec-iterm-tmux</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="copier"><![CDATA[Copier]]></category>
		<category domain="category" nicename="iterm2"><![CDATA[iTerm2]]></category>
		<category domain="category" nicename="mac-os"><![CDATA[Mac OS]]></category>
		<category domain="category" nicename="tmux"><![CDATA[tmux]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Reading note: Nature&#039;s article about R</title>
		<link>http://jomuller.fr/?p=396</link>
		<pubDate>Tue, 06 Jan 2015 22:05:35 +0000</pubDate>
		<dc:creator><![CDATA[jomuller]]></dc:creator>
		<guid isPermaLink="false">http://jomuller.fr/?p=396</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://jomuller.fr/wp-content/uploads/2015/01/nature_r.png"><img src="http://jomuller.fr/wp-content/uploads/2015/01/nature_r.png" alt="nature_r" width="257" height="348" class="alignleft size-full wp-image-398" /></a>One of the most famous paper in science, <em>Nature</em>, published this month an <a href="http://www.nature.com/news/programming-tools-adventures-with-r-1.16609?WT.ec_id=NATURE-20141225">article about R</a>.</p>

<blockquote>
  <p><a href="http://www.nature.com/news/programming-tools-adventures-with-r-1.16609?WT.ec_id=NATURE-20141225">Programming tools: Adventures with R</a></p>
</blockquote>

<p>I'm very excited to see that my favorite statistical software worth to be widely used by the scientific community. The article relates stories of various scientists to describe the benefits for them of using this open-source software.</p>

<!--more-->

<p>Beyond the fact R it's free, it allows the user to understand and have the full control on his data processing. R has maybe a <a href="http://www.statmethods.net/about/learningcurve.html">steep learning curve</a>, but thanks to the numerous packages beginners can perform complex statistical analysis and data visualization with few simple commands.</p>

<p>The article also relates the original motivation of the creators of R, <a href="https://en.wikipedia.org/wiki/Ross_Ihaka">Ross Ihaka</a> and <a href="https://en.wikipedia.org/wiki/Robert_Gentleman_%28statistician%29">Robert Gentleman</a>: to perform themselves their data analysis. The ability of everyone to write his own package to fill a lack and share his expertise is maybe the main strength of R.</p>

<p>There is a spreading of it usage: 1% scholarly articles cite R and <a href="http://cran.r-project.org/web/packages/">more than 6000 packages</a> are available currently on the official repository, the CRAN. I discovered in this article <a href="http://ropensci.org/">rOpenSci</a>, an initiative to raise the usage of the software in science community. Online help is described as efficient and free.</p>

<p>Most interesting for a job seeker: labs are hiring people to write packages!</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>396</wp:post_id>
		<wp:post_date>2015-01-06 23:05:35</wp:post_date>
		<wp:post_date_gmt>2015-01-06 22:05:35</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>reading-note-natures-article-about-r</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="r"><![CDATA[GNU R]]></category>
		<category domain="category" nicename="in-english"><![CDATA[In English]]></category>
		<category domain="category" nicename="notes-de-lecture"><![CDATA[notes de lecture]]></category>
		<category domain="category" nicename="veille-documentaire"><![CDATA[Veille documentaire]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Testdat : vérfier la conformiter d&#039;un tableau de données</title>
		<link>http://jomuller.fr/?p=403</link>
		<pubDate>Tue, 06 Jan 2015 22:37:01 +0000</pubDate>
		<dc:creator><![CDATA[jomuller]]></dc:creator>
		<guid isPermaLink="false">http://jomuller.fr/?p=403</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="https://github.com/ropensci/testdat">https://github.com/ropensci/testdat</a></p>

<p>Proche de l'idée de mon package en cours de développement, <a href="https://github.com/jomuller/dfcheck">dfcheck</a></p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>403</wp:post_id>
		<wp:post_date>2015-01-06 23:37:01</wp:post_date>
		<wp:post_date_gmt>2015-01-06 22:37:01</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>testdat-verfier-la-conformiter-dun-tableau-de-donnees</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="r"><![CDATA[GNU R]]></category>
		<category domain="category" nicename="package-r"><![CDATA[Package R]]></category>
		<category domain="post_format" nicename="post-format-link"><![CDATA[Lien]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Install last version of vim-r-plugin for MacVim</title>
		<link>http://jomuller.fr/?p=413</link>
		<pubDate>Sun, 01 Feb 2015 09:32:49 +0000</pubDate>
		<dc:creator><![CDATA[jomuller]]></dc:creator>
		<guid isPermaLink="false">http://jomuller.fr/?p=413</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://jomuller.fr/wp-content/uploads/2015/02/macvim_r.jpg"><img class="alignleft size-full wp-image-419" src="http://jomuller.fr/wp-content/uploads/2015/02/macvim_r.jpg" alt="macvim_r" width="86" height="238" /></a>Since 4 months I'm using Vim as my main text editor for editing R code. Out the box, Vim and R are not able to communicate together. The <a href="https://github.com/jcfaria/Vim-R-plugin">vim-r-plugin</a> associated with the <a href="https://github.com/jalvesaq/VimCom">VimCom</a> R package provides a highly efficient link between Vim and R.

On Mac OS X, <a href="https://code.google.com/p/macvim/">MacVim</a> is an elegant solution to use Vim with a good integration to the OS. This is also easier than a CLI version for a beginner to discover the power of Vim. Indeed, there is menus for common commands and a lot of things work as user should expect in Mac OS X: pasting to the system clipboard, binding to standard shortcuts, directly open a file from the Finder…

However, to take full advantage of the <em>vim-r-plugin</em> and <em>VimCom</em> in <em>MacVim</em>, one have to install the last development version, that could be awkward.

The aim of this article is to describe this installation.

<!--more-->

<a href="https://github.com/jalvesaq">Jakson Alves de Aquino</a>, the creator of this fantastics plug-in, described in a figure I reproduce above how MacVim and R are communicating using <em>vim-r-plugin</em> and <em>VimCom</em>. It's quite complicated because, as he explained me, the solution needs three different ways of communication to benefit of all the integrations: omnicompletion, object browser, sending code from Vim to R…

[caption id="attachment_424" align="aligncenter" width="300"]<a href="http://jomuller.fr/wp-content/uploads/2015/02/vimrcom.png"><img class="size-medium wp-image-424" src="http://jomuller.fr/wp-content/uploads/2015/02/vimrcom-300x225.png" alt="Communication between MacVim.app and R.app (extract from the vim-r-plugin documentation)" width="300" height="225" /></a> Communication between MacVim.app and R.app (extract from the vim-r-plugin documentation)[/caption]
<h2>Prerequise</h2>
These steps were tested with the following configuration:
<ul>
	<li>OS X (Yosemite) 10.10.2</li>
	<li>Have the administrator access</li>
</ul>
<h2>Install VIM side : vim-r-plugin</h2>
<h3>Install MacVim</h3>
If not already done, install <a href="https://code.google.com/p/macvim/">MacVim</a>
<ol>
	<li>Download the lasted snapshot <a href="https://github.com/b4winckler/macvim/releases">https://github.com/b4winckler/macvim/releases</a></li>
	<li>Expand the archive and move MacVim to your <code>/Applications/</code> folder</li>
</ol>
<h3>Install Pathogen</h3>
<a href="https://github.com/tpope/vim-pathogen">Pathogen</a> is a plug-in manager for <em>Vim</em>

To install it, open a terminal an type (or copy-paste):

<code>mkdir -p ~/.vim/autoload ~/.vim/bundle &amp;&amp; \
curl -LSso ~/.vim/autoload/pathogen.vim https://tpo.pe/pathogen.vim</code>
<h3>Install Git</h3>
<a href="http://www.git-scm.com/">Git</a> is a source control system. We will use it to download last version of the plug-in and the package.

To install Git:
<ol>
	<li>Go to <a href="http://www.git-scm.com/download/mac">http://www.git-scm.com/download/mac</a></li>
	<li>Download it</li>
	<li>Install it</li>
</ol>
<h3>Install vim-r-plugin</h3>
Open a terminal and type:

<code>cd ~/.vim/bundle/
git clone https://github.com/jcfaria/Vim-R-plugin.git</code>

To enable the documentation, open MacVim and type

<code>:Helptags</code>
<h2>Install the R side : VimCom package</h2>
<h3>Install R</h3>
Install last version of R with R GUI:
<ol>
	<li>Go to <a href="http://cran.r-project.org/bin/macosx/">http://cran.r-project.org/bin/macosx/</a></li>
	<li>Download the binary for <em>Maverick</em> or higher (named <em>R-3.1.2-mavericks.pkg</em> today)</li>
	<li>Install it</li>
</ol>
<h3>Xquartz</h3>
To build the <em>VimCom</em> package from sources, you needs some dependancies from the X11 system. They can be installed with Xquartz. Reinstall it if necessary.
<ol>
	<li>Go to <a href="http://xquartz.macosforge.org/">http://xquartz.macosforge.org/</a></li>
	<li>Download the last version (<em>XQuartz-2.7.7.dmg</em> today)</li>
	<li>Install it</li>
</ol>
<h3>Build the <em>VimCom</em> package</h3>
Finally we will build and install the <em>VimCom</em> package.
<ol>
	<li>Open the terminal</li>
	<li>Type (or copy-paste) the following commands:</li>
</ol>
<code>cd ~/Downloads/
git clone https://github.com/jalvesaq/VimCom
R --vanilla CMD INSTALL --configure-args=--enable-clientserver VimCom</code>
<h3>Load <em>VimCom</em> when R start</h3>
<ol>
	<li>Open MacVim</li>
	<li>Type <code>:o ~/.Rprofile</code></li>
	<li>Add the following lines:</li>
</ol>
<code>if (interactive()) {
library(vimcom)
}</code>
<h3>Check the installation</h3>
To check the plug-in is properly installed, open <em>R.app</em> and type

<code>?vimcom</code>

The help dialog should open.
<h2>Try it</h2>
To check the installation, open MacVim, then
<ul>
	<li>Set the file type as R: <code>:set ft=R</code></li>
	<li>Start R with <kbd>local leader</kbd> + <kbd>r</kbd> + <kbd>f</kbd></li>
	<li>In Vim, write <code>1 + 1</code>, go back to normal mode, select the line and press <kbd>space bar</kbd>. The command should be send to R.</li>
	<li>Open the object browser with <kbd>local leader</kbd> + <kbd>r</kbd> + <kbd>o</kbd></li>
	<li>Try omni-completion: in MacVim, Insert mode, type <code>summ</code> and then <kbd>ctrl</kbd> + <kbd>x</kbd> + <kbd>o</kbd>. It should complete with <code>summary</code>.</li>
	<li>Try argument completion: type <code>summary(</code> and then <kbd>ctrl</kbd> + <kbd>x</kbd> + <kbd>a</kbd>. It have to propose the argument <code>object</code>.</li>
</ul>
<h2>Tips</h2>
<ul>
	<li>Read the <em>vim-r-plugin</em> documentation. It's well done!</li>
	<li>Check you have no old version of the plugin</li>
	<li>R.app must be open by the vim-r-plugin. Close R.app before starting MacVim.</li>
</ul>
<h2>Go further</h2>
There is a lot of configuration possible. In another post, I will describe how to install the CLI version, with Tmux and nice colors in the R console.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>413</wp:post_id>
		<wp:post_date>2015-02-01 10:32:49</wp:post_date>
		<wp:post_date_gmt>2015-02-01 09:32:49</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>install-last-version-of-vim-r-plugin-for-macvim</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="r"><![CDATA[GNU R]]></category>
		<category domain="category" nicename="in-english"><![CDATA[In English]]></category>
		<category domain="category" nicename="vim"><![CDATA[Vim]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Reading Note: Python in Nature</title>
		<link>http://jomuller.fr/?p=426</link>
		<pubDate>Fri, 06 Feb 2015 10:59:45 +0000</pubDate>
		<dc:creator><![CDATA[jomuller]]></dc:creator>
		<guid isPermaLink="false">http://jomuller.fr/?p=426</guid>
		<description></description>
		<content:encoded><![CDATA[[caption id="attachment_427" align="alignleft" width="218"]<a href="http://www.nature.com/news/programming-tools-adventures-with-r-1.16609?WT.ec_id=NATURE-20141225"><img class="size-medium wp-image-427" src="http://jomuller.fr/wp-content/uploads/2015/02/python_science-218x300.png" alt="Nature's article about Python first page" width="218" height="300" /></a> Nature's article about Python first page[/caption]

<a href="http://www.nature.com/news/programming-pick-up-python-1.16833?WT.ec_id=NATURE-20150206" target="_blank">Nature published this week</a> an article about the usage of <a href="https://www.python.org/" target="_blank">Python programming language</a> in science. This article is in the same serie the other one <a title="Reading note: Nature’s article about R" href="http://jomuller.fr/?p=396">I already described about R</a>.

<blockquote>Pick Up Python</blockquote>
Python is for me the most beautiful programming language I know. I'm very comfortable when I can program with Python, but I can't use it in my professional environment because it's neither used or well-known.

<!--more-->

In the Nature's article, they describe a new exciting job in the academic field: 'data professor'. Because today a large part of our scientific work involve data, students have to learn data skills. Biostatisticians are maybe not the best teachers for this because they focus on biostatics instead of the tools. Programmers neither are maybe not good teacher because they often have no idea about the others science fields and don't understand the basics needs of students in science.

First recommendation in this article: learn Python. There are various good reasons: it's open-source, free, popular, have a simple syntax, abundant online resources and nice frameworks for scientific.

Python is a general-purpose language and for this, it's more a the Swiss army knife programming language where R is more specific for statistics. Python is maybe not the best tool for statistics. Nevertheless, if one have to do more than data analysis ( e.g. developing a web app or a website related to his work), all the work should be done in one unique language. Then, there is no problems of importation-exportation, data format and language mixing.

[caption id="attachment_430" align="aligncenter" width="290"]<a href="http://jomuller.fr/wp-content/uploads/2015/02/python-logo.png"><img class="wp-image-430 size-full" src="http://jomuller.fr/wp-content/uploads/2015/02/python-logo.png" alt="The Python logo" width="290" height="82" /></a> The Python logo[/caption]

One of the most interesting idea of this article is what says Jessica McKellar
<blockquote>Programming languages are popular only if new people are learning them and using them in diverse contexts [...]: new users extend the language into new areas, which in turn attracts still more users.</blockquote>
For my part, I think Python should be the perfect common language for all the professionals involved in data science: core scientific (physicians for my part), IT professionals, biostatisticians and decision-makers. If these professionals use the same programming language, they would be able to communicate efficiently when implementation time of an idea come.

As a medical resident in Public Health, I see my role as an interface between these professionals. Python should be an excellent tool to facilitate this interface.

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>426</wp:post_id>
		<wp:post_date>2015-02-06 11:59:45</wp:post_date>
		<wp:post_date_gmt>2015-02-06 10:59:45</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>reading-note-python-in-nature</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="in-english"><![CDATA[In English]]></category>
		<category domain="category" nicename="notes-de-lecture"><![CDATA[notes de lecture]]></category>
		<category domain="category" nicename="programmation"><![CDATA[Programmation]]></category>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
</channel>
</rss>
